// source: ltdb_qr.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var vgeodb_common_pb = require('./vgeodb_common_pb.js');
goog.object.extend(proto, vgeodb_common_pb);
var placevector_pb = require('./placevector_pb.js');
goog.object.extend(proto, placevector_pb);
var localfeature_pb = require('./localfeature_pb.js');
goog.object.extend(proto, localfeature_pb);
goog.exportSymbol('proto.VgeoDB.QR.LocalFeatureQuery', null, global);
goog.exportSymbol('proto.VgeoDB.QR.LocalFeatureReturn', null, global);
goog.exportSymbol('proto.VgeoDB.QR.LocalFeatureReturnUnit', null, global);
goog.exportSymbol('proto.VgeoDB.QR.LocationQueryType_t', null, global);
goog.exportSymbol('proto.VgeoDB.QR.PlaceVectorQuery', null, global);
goog.exportSymbol('proto.VgeoDB.QR.PlaceVectorReturn', null, global);
goog.exportSymbol('proto.VgeoDB.QR.QueryType_t', null, global);
goog.exportSymbol('proto.VgeoDB.QR.QueryType_t.UquerytypeCase', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.VgeoDB.QR.LocationQueryType_t = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.VgeoDB.QR.LocationQueryType_t, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.VgeoDB.QR.LocationQueryType_t.displayName = 'proto.VgeoDB.QR.LocationQueryType_t';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.VgeoDB.QR.QueryType_t = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.VgeoDB.QR.QueryType_t.oneofGroups_);
};
goog.inherits(proto.VgeoDB.QR.QueryType_t, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.VgeoDB.QR.QueryType_t.displayName = 'proto.VgeoDB.QR.QueryType_t';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.VgeoDB.QR.PlaceVectorQuery = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.VgeoDB.QR.PlaceVectorQuery.repeatedFields_, null);
};
goog.inherits(proto.VgeoDB.QR.PlaceVectorQuery, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.VgeoDB.QR.PlaceVectorQuery.displayName = 'proto.VgeoDB.QR.PlaceVectorQuery';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.VgeoDB.QR.PlaceVectorReturn = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.VgeoDB.QR.PlaceVectorReturn.repeatedFields_, null);
};
goog.inherits(proto.VgeoDB.QR.PlaceVectorReturn, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.VgeoDB.QR.PlaceVectorReturn.displayName = 'proto.VgeoDB.QR.PlaceVectorReturn';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.VgeoDB.QR.LocalFeatureQuery = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.VgeoDB.QR.LocalFeatureQuery.repeatedFields_, null);
};
goog.inherits(proto.VgeoDB.QR.LocalFeatureQuery, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.VgeoDB.QR.LocalFeatureQuery.displayName = 'proto.VgeoDB.QR.LocalFeatureQuery';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.VgeoDB.QR.LocalFeatureReturnUnit = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.VgeoDB.QR.LocalFeatureReturnUnit.repeatedFields_, null);
};
goog.inherits(proto.VgeoDB.QR.LocalFeatureReturnUnit, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.VgeoDB.QR.LocalFeatureReturnUnit.displayName = 'proto.VgeoDB.QR.LocalFeatureReturnUnit';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.VgeoDB.QR.LocalFeatureReturn = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.VgeoDB.QR.LocalFeatureReturn.repeatedFields_, null);
};
goog.inherits(proto.VgeoDB.QR.LocalFeatureReturn, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.VgeoDB.QR.LocalFeatureReturn.displayName = 'proto.VgeoDB.QR.LocalFeatureReturn';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.VgeoDB.QR.LocationQueryType_t.prototype.toObject = function(opt_includeInstance) {
  return proto.VgeoDB.QR.LocationQueryType_t.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.VgeoDB.QR.LocationQueryType_t} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.VgeoDB.QR.LocationQueryType_t.toObject = function(includeInstance, msg) {
  var f, obj = {
    stlocation: (f = msg.getStlocation()) && vgeodb_common_pb.XYZ64_t.toObject(includeInstance, f),
    fradius: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.VgeoDB.QR.LocationQueryType_t}
 */
proto.VgeoDB.QR.LocationQueryType_t.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.VgeoDB.QR.LocationQueryType_t;
  return proto.VgeoDB.QR.LocationQueryType_t.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.VgeoDB.QR.LocationQueryType_t} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.VgeoDB.QR.LocationQueryType_t}
 */
proto.VgeoDB.QR.LocationQueryType_t.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new vgeodb_common_pb.XYZ64_t;
      reader.readMessage(value,vgeodb_common_pb.XYZ64_t.deserializeBinaryFromReader);
      msg.setStlocation(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setFradius(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.VgeoDB.QR.LocationQueryType_t.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.VgeoDB.QR.LocationQueryType_t.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.VgeoDB.QR.LocationQueryType_t} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.VgeoDB.QR.LocationQueryType_t.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStlocation();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      vgeodb_common_pb.XYZ64_t.serializeBinaryToWriter
    );
  }
  f = message.getFradius();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
};


/**
 * optional VgeoDB.common.XYZ64_t stLocation = 1;
 * @return {?proto.VgeoDB.common.XYZ64_t}
 */
proto.VgeoDB.QR.LocationQueryType_t.prototype.getStlocation = function() {
  return /** @type{?proto.VgeoDB.common.XYZ64_t} */ (
    jspb.Message.getWrapperField(this, vgeodb_common_pb.XYZ64_t, 1));
};


/**
 * @param {?proto.VgeoDB.common.XYZ64_t|undefined} value
 * @return {!proto.VgeoDB.QR.LocationQueryType_t} returns this
*/
proto.VgeoDB.QR.LocationQueryType_t.prototype.setStlocation = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.VgeoDB.QR.LocationQueryType_t} returns this
 */
proto.VgeoDB.QR.LocationQueryType_t.prototype.clearStlocation = function() {
  return this.setStlocation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.VgeoDB.QR.LocationQueryType_t.prototype.hasStlocation = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional float fRadius = 2;
 * @return {number}
 */
proto.VgeoDB.QR.LocationQueryType_t.prototype.getFradius = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.VgeoDB.QR.LocationQueryType_t} returns this
 */
proto.VgeoDB.QR.LocationQueryType_t.prototype.setFradius = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.VgeoDB.QR.QueryType_t.oneofGroups_ = [[1,2,3]];

/**
 * @enum {number}
 */
proto.VgeoDB.QR.QueryType_t.UquerytypeCase = {
  UQUERYTYPE_NOT_SET: 0,
  STLOCATION: 1,
  UN64UNIQUEIDLIST: 2,
  UN64GROUPIDLIST: 3
};

/**
 * @return {proto.VgeoDB.QR.QueryType_t.UquerytypeCase}
 */
proto.VgeoDB.QR.QueryType_t.prototype.getUquerytypeCase = function() {
  return /** @type {proto.VgeoDB.QR.QueryType_t.UquerytypeCase} */(jspb.Message.computeOneofCase(this, proto.VgeoDB.QR.QueryType_t.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.VgeoDB.QR.QueryType_t.prototype.toObject = function(opt_includeInstance) {
  return proto.VgeoDB.QR.QueryType_t.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.VgeoDB.QR.QueryType_t} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.VgeoDB.QR.QueryType_t.toObject = function(includeInstance, msg) {
  var f, obj = {
    stlocation: (f = msg.getStlocation()) && proto.VgeoDB.QR.LocationQueryType_t.toObject(includeInstance, f),
    un64uniqueidlist: jspb.Message.getFieldWithDefault(msg, 2, 0),
    un64groupidlist: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.VgeoDB.QR.QueryType_t}
 */
proto.VgeoDB.QR.QueryType_t.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.VgeoDB.QR.QueryType_t;
  return proto.VgeoDB.QR.QueryType_t.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.VgeoDB.QR.QueryType_t} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.VgeoDB.QR.QueryType_t}
 */
proto.VgeoDB.QR.QueryType_t.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.VgeoDB.QR.LocationQueryType_t;
      reader.readMessage(value,proto.VgeoDB.QR.LocationQueryType_t.deserializeBinaryFromReader);
      msg.setStlocation(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUn64uniqueidlist(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUn64groupidlist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.VgeoDB.QR.QueryType_t.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.VgeoDB.QR.QueryType_t.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.VgeoDB.QR.QueryType_t} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.VgeoDB.QR.QueryType_t.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStlocation();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.VgeoDB.QR.LocationQueryType_t.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint64(
      3,
      f
    );
  }
};


/**
 * optional LocationQueryType_t stLocation = 1;
 * @return {?proto.VgeoDB.QR.LocationQueryType_t}
 */
proto.VgeoDB.QR.QueryType_t.prototype.getStlocation = function() {
  return /** @type{?proto.VgeoDB.QR.LocationQueryType_t} */ (
    jspb.Message.getWrapperField(this, proto.VgeoDB.QR.LocationQueryType_t, 1));
};


/**
 * @param {?proto.VgeoDB.QR.LocationQueryType_t|undefined} value
 * @return {!proto.VgeoDB.QR.QueryType_t} returns this
*/
proto.VgeoDB.QR.QueryType_t.prototype.setStlocation = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.VgeoDB.QR.QueryType_t.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.VgeoDB.QR.QueryType_t} returns this
 */
proto.VgeoDB.QR.QueryType_t.prototype.clearStlocation = function() {
  return this.setStlocation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.VgeoDB.QR.QueryType_t.prototype.hasStlocation = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 un64UniqueIDList = 2;
 * @return {number}
 */
proto.VgeoDB.QR.QueryType_t.prototype.getUn64uniqueidlist = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.VgeoDB.QR.QueryType_t} returns this
 */
proto.VgeoDB.QR.QueryType_t.prototype.setUn64uniqueidlist = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.VgeoDB.QR.QueryType_t.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.VgeoDB.QR.QueryType_t} returns this
 */
proto.VgeoDB.QR.QueryType_t.prototype.clearUn64uniqueidlist = function() {
  return jspb.Message.setOneofField(this, 2, proto.VgeoDB.QR.QueryType_t.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.VgeoDB.QR.QueryType_t.prototype.hasUn64uniqueidlist = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint64 un64GroupIDList = 3;
 * @return {number}
 */
proto.VgeoDB.QR.QueryType_t.prototype.getUn64groupidlist = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.VgeoDB.QR.QueryType_t} returns this
 */
proto.VgeoDB.QR.QueryType_t.prototype.setUn64groupidlist = function(value) {
  return jspb.Message.setOneofField(this, 3, proto.VgeoDB.QR.QueryType_t.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.VgeoDB.QR.QueryType_t} returns this
 */
proto.VgeoDB.QR.QueryType_t.prototype.clearUn64groupidlist = function() {
  return jspb.Message.setOneofField(this, 3, proto.VgeoDB.QR.QueryType_t.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.VgeoDB.QR.QueryType_t.prototype.hasUn64groupidlist = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.VgeoDB.QR.PlaceVectorQuery.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.VgeoDB.QR.PlaceVectorQuery.prototype.toObject = function(opt_includeInstance) {
  return proto.VgeoDB.QR.PlaceVectorQuery.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.VgeoDB.QR.PlaceVectorQuery} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.VgeoDB.QR.PlaceVectorQuery.toObject = function(includeInstance, msg) {
  var f, obj = {
    stquerytypeList: jspb.Message.toObjectList(msg.getStquerytypeList(),
    proto.VgeoDB.QR.QueryType_t.toObject, includeInstance),
    udescriptor: (f = msg.getUdescriptor()) && placevector_pb.PlaceVectorDesc.toObject(includeInstance, f),
    nnearestmax: jspb.Message.getFieldWithDefault(msg, 4, 0),
    ndistancetype: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.VgeoDB.QR.PlaceVectorQuery}
 */
proto.VgeoDB.QR.PlaceVectorQuery.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.VgeoDB.QR.PlaceVectorQuery;
  return proto.VgeoDB.QR.PlaceVectorQuery.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.VgeoDB.QR.PlaceVectorQuery} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.VgeoDB.QR.PlaceVectorQuery}
 */
proto.VgeoDB.QR.PlaceVectorQuery.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.VgeoDB.QR.QueryType_t;
      reader.readMessage(value,proto.VgeoDB.QR.QueryType_t.deserializeBinaryFromReader);
      msg.addStquerytype(value);
      break;
    case 2:
      var value = new placevector_pb.PlaceVectorDesc;
      reader.readMessage(value,placevector_pb.PlaceVectorDesc.deserializeBinaryFromReader);
      msg.setUdescriptor(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNnearestmax(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNdistancetype(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.VgeoDB.QR.PlaceVectorQuery.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.VgeoDB.QR.PlaceVectorQuery.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.VgeoDB.QR.PlaceVectorQuery} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.VgeoDB.QR.PlaceVectorQuery.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStquerytypeList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.VgeoDB.QR.QueryType_t.serializeBinaryToWriter
    );
  }
  f = message.getUdescriptor();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      placevector_pb.PlaceVectorDesc.serializeBinaryToWriter
    );
  }
  f = message.getNnearestmax();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getNdistancetype();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * repeated QueryType_t stQueryType = 1;
 * @return {!Array<!proto.VgeoDB.QR.QueryType_t>}
 */
proto.VgeoDB.QR.PlaceVectorQuery.prototype.getStquerytypeList = function() {
  return /** @type{!Array<!proto.VgeoDB.QR.QueryType_t>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.VgeoDB.QR.QueryType_t, 1));
};


/**
 * @param {!Array<!proto.VgeoDB.QR.QueryType_t>} value
 * @return {!proto.VgeoDB.QR.PlaceVectorQuery} returns this
*/
proto.VgeoDB.QR.PlaceVectorQuery.prototype.setStquerytypeList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.VgeoDB.QR.QueryType_t=} opt_value
 * @param {number=} opt_index
 * @return {!proto.VgeoDB.QR.QueryType_t}
 */
proto.VgeoDB.QR.PlaceVectorQuery.prototype.addStquerytype = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.VgeoDB.QR.QueryType_t, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.VgeoDB.QR.PlaceVectorQuery} returns this
 */
proto.VgeoDB.QR.PlaceVectorQuery.prototype.clearStquerytypeList = function() {
  return this.setStquerytypeList([]);
};


/**
 * optional VgeoDB.PlaceVectorDesc uDescriptor = 2;
 * @return {?proto.VgeoDB.PlaceVectorDesc}
 */
proto.VgeoDB.QR.PlaceVectorQuery.prototype.getUdescriptor = function() {
  return /** @type{?proto.VgeoDB.PlaceVectorDesc} */ (
    jspb.Message.getWrapperField(this, placevector_pb.PlaceVectorDesc, 2));
};


/**
 * @param {?proto.VgeoDB.PlaceVectorDesc|undefined} value
 * @return {!proto.VgeoDB.QR.PlaceVectorQuery} returns this
*/
proto.VgeoDB.QR.PlaceVectorQuery.prototype.setUdescriptor = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.VgeoDB.QR.PlaceVectorQuery} returns this
 */
proto.VgeoDB.QR.PlaceVectorQuery.prototype.clearUdescriptor = function() {
  return this.setUdescriptor(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.VgeoDB.QR.PlaceVectorQuery.prototype.hasUdescriptor = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 nNearestMax = 4;
 * @return {number}
 */
proto.VgeoDB.QR.PlaceVectorQuery.prototype.getNnearestmax = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.VgeoDB.QR.PlaceVectorQuery} returns this
 */
proto.VgeoDB.QR.PlaceVectorQuery.prototype.setNnearestmax = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 nDistanceType = 5;
 * @return {number}
 */
proto.VgeoDB.QR.PlaceVectorQuery.prototype.getNdistancetype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.VgeoDB.QR.PlaceVectorQuery} returns this
 */
proto.VgeoDB.QR.PlaceVectorQuery.prototype.setNdistancetype = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.VgeoDB.QR.PlaceVectorReturn.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.VgeoDB.QR.PlaceVectorReturn.prototype.toObject = function(opt_includeInstance) {
  return proto.VgeoDB.QR.PlaceVectorReturn.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.VgeoDB.QR.PlaceVectorReturn} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.VgeoDB.QR.PlaceVectorReturn.toObject = function(includeInstance, msg) {
  var f, obj = {
    arstplacevectorrList: jspb.Message.toObjectList(msg.getArstplacevectorrList(),
    placevector_pb.PlaceVectorMeta_t.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.VgeoDB.QR.PlaceVectorReturn}
 */
proto.VgeoDB.QR.PlaceVectorReturn.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.VgeoDB.QR.PlaceVectorReturn;
  return proto.VgeoDB.QR.PlaceVectorReturn.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.VgeoDB.QR.PlaceVectorReturn} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.VgeoDB.QR.PlaceVectorReturn}
 */
proto.VgeoDB.QR.PlaceVectorReturn.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new placevector_pb.PlaceVectorMeta_t;
      reader.readMessage(value,placevector_pb.PlaceVectorMeta_t.deserializeBinaryFromReader);
      msg.addArstplacevectorr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.VgeoDB.QR.PlaceVectorReturn.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.VgeoDB.QR.PlaceVectorReturn.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.VgeoDB.QR.PlaceVectorReturn} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.VgeoDB.QR.PlaceVectorReturn.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getArstplacevectorrList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      placevector_pb.PlaceVectorMeta_t.serializeBinaryToWriter
    );
  }
};


/**
 * repeated VgeoDB.PlaceVectorMeta_t arstPlaceVectorR = 1;
 * @return {!Array<!proto.VgeoDB.PlaceVectorMeta_t>}
 */
proto.VgeoDB.QR.PlaceVectorReturn.prototype.getArstplacevectorrList = function() {
  return /** @type{!Array<!proto.VgeoDB.PlaceVectorMeta_t>} */ (
    jspb.Message.getRepeatedWrapperField(this, placevector_pb.PlaceVectorMeta_t, 1));
};


/**
 * @param {!Array<!proto.VgeoDB.PlaceVectorMeta_t>} value
 * @return {!proto.VgeoDB.QR.PlaceVectorReturn} returns this
*/
proto.VgeoDB.QR.PlaceVectorReturn.prototype.setArstplacevectorrList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.VgeoDB.PlaceVectorMeta_t=} opt_value
 * @param {number=} opt_index
 * @return {!proto.VgeoDB.PlaceVectorMeta_t}
 */
proto.VgeoDB.QR.PlaceVectorReturn.prototype.addArstplacevectorr = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.VgeoDB.PlaceVectorMeta_t, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.VgeoDB.QR.PlaceVectorReturn} returns this
 */
proto.VgeoDB.QR.PlaceVectorReturn.prototype.clearArstplacevectorrList = function() {
  return this.setArstplacevectorrList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.VgeoDB.QR.LocalFeatureQuery.repeatedFields_ = [1,4,8,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.VgeoDB.QR.LocalFeatureQuery.prototype.toObject = function(opt_includeInstance) {
  return proto.VgeoDB.QR.LocalFeatureQuery.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.VgeoDB.QR.LocalFeatureQuery} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.VgeoDB.QR.LocalFeatureQuery.toObject = function(includeInstance, msg) {
  var f, obj = {
    stquerytypeList: jspb.Message.toObjectList(msg.getStquerytypeList(),
    proto.VgeoDB.QR.QueryType_t.toObject, includeInstance),
    un64keypointindexlistList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    stkeypointList: jspb.Message.toObjectList(msg.getStkeypointList(),
    localfeature_pb.KeyPoint_t.toObject, includeInstance),
    nnearestmax: jspb.Message.getFieldWithDefault(msg, 6, 0),
    ndistancetype: jspb.Message.getFieldWithDefault(msg, 7, 0),
    udescriptorList: jspb.Message.toObjectList(msg.getUdescriptorList(),
    localfeature_pb.LocalFeatureDesc.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.VgeoDB.QR.LocalFeatureQuery}
 */
proto.VgeoDB.QR.LocalFeatureQuery.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.VgeoDB.QR.LocalFeatureQuery;
  return proto.VgeoDB.QR.LocalFeatureQuery.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.VgeoDB.QR.LocalFeatureQuery} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.VgeoDB.QR.LocalFeatureQuery}
 */
proto.VgeoDB.QR.LocalFeatureQuery.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.VgeoDB.QR.QueryType_t;
      reader.readMessage(value,proto.VgeoDB.QR.QueryType_t.deserializeBinaryFromReader);
      msg.addStquerytype(value);
      break;
    case 4:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint64() : [reader.readUint64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addUn64keypointindexlist(values[i]);
      }
      break;
    case 8:
      var value = new localfeature_pb.KeyPoint_t;
      reader.readMessage(value,localfeature_pb.KeyPoint_t.deserializeBinaryFromReader);
      msg.addStkeypoint(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNnearestmax(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNdistancetype(value);
      break;
    case 5:
      var value = new localfeature_pb.LocalFeatureDesc;
      reader.readMessage(value,localfeature_pb.LocalFeatureDesc.deserializeBinaryFromReader);
      msg.addUdescriptor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.VgeoDB.QR.LocalFeatureQuery.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.VgeoDB.QR.LocalFeatureQuery.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.VgeoDB.QR.LocalFeatureQuery} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.VgeoDB.QR.LocalFeatureQuery.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStquerytypeList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.VgeoDB.QR.QueryType_t.serializeBinaryToWriter
    );
  }
  f = message.getUn64keypointindexlistList();
  if (f.length > 0) {
    writer.writePackedUint64(
      4,
      f
    );
  }
  f = message.getStkeypointList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      localfeature_pb.KeyPoint_t.serializeBinaryToWriter
    );
  }
  f = message.getNnearestmax();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getNdistancetype();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getUdescriptorList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      localfeature_pb.LocalFeatureDesc.serializeBinaryToWriter
    );
  }
};


/**
 * repeated QueryType_t stQueryType = 1;
 * @return {!Array<!proto.VgeoDB.QR.QueryType_t>}
 */
proto.VgeoDB.QR.LocalFeatureQuery.prototype.getStquerytypeList = function() {
  return /** @type{!Array<!proto.VgeoDB.QR.QueryType_t>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.VgeoDB.QR.QueryType_t, 1));
};


/**
 * @param {!Array<!proto.VgeoDB.QR.QueryType_t>} value
 * @return {!proto.VgeoDB.QR.LocalFeatureQuery} returns this
*/
proto.VgeoDB.QR.LocalFeatureQuery.prototype.setStquerytypeList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.VgeoDB.QR.QueryType_t=} opt_value
 * @param {number=} opt_index
 * @return {!proto.VgeoDB.QR.QueryType_t}
 */
proto.VgeoDB.QR.LocalFeatureQuery.prototype.addStquerytype = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.VgeoDB.QR.QueryType_t, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.VgeoDB.QR.LocalFeatureQuery} returns this
 */
proto.VgeoDB.QR.LocalFeatureQuery.prototype.clearStquerytypeList = function() {
  return this.setStquerytypeList([]);
};


/**
 * repeated uint64 un64KeypointIndexList = 4;
 * @return {!Array<number>}
 */
proto.VgeoDB.QR.LocalFeatureQuery.prototype.getUn64keypointindexlistList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.VgeoDB.QR.LocalFeatureQuery} returns this
 */
proto.VgeoDB.QR.LocalFeatureQuery.prototype.setUn64keypointindexlistList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.VgeoDB.QR.LocalFeatureQuery} returns this
 */
proto.VgeoDB.QR.LocalFeatureQuery.prototype.addUn64keypointindexlist = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.VgeoDB.QR.LocalFeatureQuery} returns this
 */
proto.VgeoDB.QR.LocalFeatureQuery.prototype.clearUn64keypointindexlistList = function() {
  return this.setUn64keypointindexlistList([]);
};


/**
 * repeated VgeoDB.KeyPoint_t stKeypoint = 8;
 * @return {!Array<!proto.VgeoDB.KeyPoint_t>}
 */
proto.VgeoDB.QR.LocalFeatureQuery.prototype.getStkeypointList = function() {
  return /** @type{!Array<!proto.VgeoDB.KeyPoint_t>} */ (
    jspb.Message.getRepeatedWrapperField(this, localfeature_pb.KeyPoint_t, 8));
};


/**
 * @param {!Array<!proto.VgeoDB.KeyPoint_t>} value
 * @return {!proto.VgeoDB.QR.LocalFeatureQuery} returns this
*/
proto.VgeoDB.QR.LocalFeatureQuery.prototype.setStkeypointList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.VgeoDB.KeyPoint_t=} opt_value
 * @param {number=} opt_index
 * @return {!proto.VgeoDB.KeyPoint_t}
 */
proto.VgeoDB.QR.LocalFeatureQuery.prototype.addStkeypoint = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.VgeoDB.KeyPoint_t, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.VgeoDB.QR.LocalFeatureQuery} returns this
 */
proto.VgeoDB.QR.LocalFeatureQuery.prototype.clearStkeypointList = function() {
  return this.setStkeypointList([]);
};


/**
 * optional int32 nNearestMax = 6;
 * @return {number}
 */
proto.VgeoDB.QR.LocalFeatureQuery.prototype.getNnearestmax = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.VgeoDB.QR.LocalFeatureQuery} returns this
 */
proto.VgeoDB.QR.LocalFeatureQuery.prototype.setNnearestmax = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int32 nDistanceType = 7;
 * @return {number}
 */
proto.VgeoDB.QR.LocalFeatureQuery.prototype.getNdistancetype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.VgeoDB.QR.LocalFeatureQuery} returns this
 */
proto.VgeoDB.QR.LocalFeatureQuery.prototype.setNdistancetype = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * repeated VgeoDB.LocalFeatureDesc uDescriptor = 5;
 * @return {!Array<!proto.VgeoDB.LocalFeatureDesc>}
 */
proto.VgeoDB.QR.LocalFeatureQuery.prototype.getUdescriptorList = function() {
  return /** @type{!Array<!proto.VgeoDB.LocalFeatureDesc>} */ (
    jspb.Message.getRepeatedWrapperField(this, localfeature_pb.LocalFeatureDesc, 5));
};


/**
 * @param {!Array<!proto.VgeoDB.LocalFeatureDesc>} value
 * @return {!proto.VgeoDB.QR.LocalFeatureQuery} returns this
*/
proto.VgeoDB.QR.LocalFeatureQuery.prototype.setUdescriptorList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.VgeoDB.LocalFeatureDesc=} opt_value
 * @param {number=} opt_index
 * @return {!proto.VgeoDB.LocalFeatureDesc}
 */
proto.VgeoDB.QR.LocalFeatureQuery.prototype.addUdescriptor = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.VgeoDB.LocalFeatureDesc, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.VgeoDB.QR.LocalFeatureQuery} returns this
 */
proto.VgeoDB.QR.LocalFeatureQuery.prototype.clearUdescriptorList = function() {
  return this.setUdescriptorList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.VgeoDB.QR.LocalFeatureReturnUnit.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.VgeoDB.QR.LocalFeatureReturnUnit.prototype.toObject = function(opt_includeInstance) {
  return proto.VgeoDB.QR.LocalFeatureReturnUnit.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.VgeoDB.QR.LocalFeatureReturnUnit} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.VgeoDB.QR.LocalFeatureReturnUnit.toObject = function(includeInstance, msg) {
  var f, obj = {
    un64matchedkeypointindex: jspb.Message.getFieldWithDefault(msg, 1, 0),
    arstmatchedfeatureList: jspb.Message.toObjectList(msg.getArstmatchedfeatureList(),
    localfeature_pb.LocalFeature.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.VgeoDB.QR.LocalFeatureReturnUnit}
 */
proto.VgeoDB.QR.LocalFeatureReturnUnit.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.VgeoDB.QR.LocalFeatureReturnUnit;
  return proto.VgeoDB.QR.LocalFeatureReturnUnit.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.VgeoDB.QR.LocalFeatureReturnUnit} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.VgeoDB.QR.LocalFeatureReturnUnit}
 */
proto.VgeoDB.QR.LocalFeatureReturnUnit.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUn64matchedkeypointindex(value);
      break;
    case 2:
      var value = new localfeature_pb.LocalFeature;
      reader.readMessage(value,localfeature_pb.LocalFeature.deserializeBinaryFromReader);
      msg.addArstmatchedfeature(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.VgeoDB.QR.LocalFeatureReturnUnit.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.VgeoDB.QR.LocalFeatureReturnUnit.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.VgeoDB.QR.LocalFeatureReturnUnit} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.VgeoDB.QR.LocalFeatureReturnUnit.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUn64matchedkeypointindex();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getArstmatchedfeatureList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      localfeature_pb.LocalFeature.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 un64MatchedKeypointIndex = 1;
 * @return {number}
 */
proto.VgeoDB.QR.LocalFeatureReturnUnit.prototype.getUn64matchedkeypointindex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.VgeoDB.QR.LocalFeatureReturnUnit} returns this
 */
proto.VgeoDB.QR.LocalFeatureReturnUnit.prototype.setUn64matchedkeypointindex = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated VgeoDB.LocalFeature arstMatchedFeature = 2;
 * @return {!Array<!proto.VgeoDB.LocalFeature>}
 */
proto.VgeoDB.QR.LocalFeatureReturnUnit.prototype.getArstmatchedfeatureList = function() {
  return /** @type{!Array<!proto.VgeoDB.LocalFeature>} */ (
    jspb.Message.getRepeatedWrapperField(this, localfeature_pb.LocalFeature, 2));
};


/**
 * @param {!Array<!proto.VgeoDB.LocalFeature>} value
 * @return {!proto.VgeoDB.QR.LocalFeatureReturnUnit} returns this
*/
proto.VgeoDB.QR.LocalFeatureReturnUnit.prototype.setArstmatchedfeatureList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.VgeoDB.LocalFeature=} opt_value
 * @param {number=} opt_index
 * @return {!proto.VgeoDB.LocalFeature}
 */
proto.VgeoDB.QR.LocalFeatureReturnUnit.prototype.addArstmatchedfeature = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.VgeoDB.LocalFeature, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.VgeoDB.QR.LocalFeatureReturnUnit} returns this
 */
proto.VgeoDB.QR.LocalFeatureReturnUnit.prototype.clearArstmatchedfeatureList = function() {
  return this.setArstmatchedfeatureList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.VgeoDB.QR.LocalFeatureReturn.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.VgeoDB.QR.LocalFeatureReturn.prototype.toObject = function(opt_includeInstance) {
  return proto.VgeoDB.QR.LocalFeatureReturn.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.VgeoDB.QR.LocalFeatureReturn} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.VgeoDB.QR.LocalFeatureReturn.toObject = function(includeInstance, msg) {
  var f, obj = {
    arstlocalfeaturerList: jspb.Message.toObjectList(msg.getArstlocalfeaturerList(),
    proto.VgeoDB.QR.LocalFeatureReturnUnit.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.VgeoDB.QR.LocalFeatureReturn}
 */
proto.VgeoDB.QR.LocalFeatureReturn.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.VgeoDB.QR.LocalFeatureReturn;
  return proto.VgeoDB.QR.LocalFeatureReturn.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.VgeoDB.QR.LocalFeatureReturn} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.VgeoDB.QR.LocalFeatureReturn}
 */
proto.VgeoDB.QR.LocalFeatureReturn.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.VgeoDB.QR.LocalFeatureReturnUnit;
      reader.readMessage(value,proto.VgeoDB.QR.LocalFeatureReturnUnit.deserializeBinaryFromReader);
      msg.addArstlocalfeaturer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.VgeoDB.QR.LocalFeatureReturn.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.VgeoDB.QR.LocalFeatureReturn.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.VgeoDB.QR.LocalFeatureReturn} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.VgeoDB.QR.LocalFeatureReturn.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getArstlocalfeaturerList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.VgeoDB.QR.LocalFeatureReturnUnit.serializeBinaryToWriter
    );
  }
};


/**
 * repeated LocalFeatureReturnUnit arstLocalFeatureR = 1;
 * @return {!Array<!proto.VgeoDB.QR.LocalFeatureReturnUnit>}
 */
proto.VgeoDB.QR.LocalFeatureReturn.prototype.getArstlocalfeaturerList = function() {
  return /** @type{!Array<!proto.VgeoDB.QR.LocalFeatureReturnUnit>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.VgeoDB.QR.LocalFeatureReturnUnit, 1));
};


/**
 * @param {!Array<!proto.VgeoDB.QR.LocalFeatureReturnUnit>} value
 * @return {!proto.VgeoDB.QR.LocalFeatureReturn} returns this
*/
proto.VgeoDB.QR.LocalFeatureReturn.prototype.setArstlocalfeaturerList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.VgeoDB.QR.LocalFeatureReturnUnit=} opt_value
 * @param {number=} opt_index
 * @return {!proto.VgeoDB.QR.LocalFeatureReturnUnit}
 */
proto.VgeoDB.QR.LocalFeatureReturn.prototype.addArstlocalfeaturer = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.VgeoDB.QR.LocalFeatureReturnUnit, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.VgeoDB.QR.LocalFeatureReturn} returns this
 */
proto.VgeoDB.QR.LocalFeatureReturn.prototype.clearArstlocalfeaturerList = function() {
  return this.setArstlocalfeaturerList([]);
};


goog.object.extend(exports, proto.VgeoDB.QR);
