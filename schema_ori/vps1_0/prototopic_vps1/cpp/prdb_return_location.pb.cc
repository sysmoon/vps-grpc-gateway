// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: prdb_return_location.proto

#include "prdb_return_location.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace prdb {
namespace location {
constexpr Data_t::Data_t(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : stsortedlocationdata_()
  , stqueriedlocation_(nullptr){}
struct Data_tDefaultTypeInternal {
  constexpr Data_tDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Data_tDefaultTypeInternal() {}
  union {
    Data_t _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Data_tDefaultTypeInternal _Data_t_default_instance_;
constexpr LocationR::LocationR(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : stdata_(){}
struct LocationRDefaultTypeInternal {
  constexpr LocationRDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~LocationRDefaultTypeInternal() {}
  union {
    LocationR _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT LocationRDefaultTypeInternal _LocationR_default_instance_;
}  // namespace location
}  // namespace prdb
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_prdb_5freturn_5flocation_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_prdb_5freturn_5flocation_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_prdb_5freturn_5flocation_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_prdb_5freturn_5flocation_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::prdb::location::Data_t, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::prdb::location::Data_t, stqueriedlocation_),
  PROTOBUF_FIELD_OFFSET(::prdb::location::Data_t, stsortedlocationdata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::prdb::location::LocationR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::prdb::location::LocationR, stdata_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::prdb::location::Data_t)},
  { 7, -1, sizeof(::prdb::location::LocationR)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::prdb::location::_Data_t_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::prdb::location::_LocationR_default_instance_),
};

const char descriptor_table_protodef_prdb_5freturn_5flocation_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\032prdb_return_location.proto\022\rprdb.locat"
  "ion\032\017prdb_meta.proto\032\035prdb_return_placev"
  "ector.proto\"o\n\006Data_t\022-\n\021stQueriedLocati"
  "on\030\001 \001(\0132\022.prdb.meta.XYZ64_t\0226\n\024stSorted"
  "LocationData\030\002 \003(\0132\030.prdb.placevector.Da"
  "ta_t\"2\n\tLocationR\022%\n\006stData\030\001 \003(\0132\025.prdb"
  ".location.Data_tB\013\n\tdbms.prdbb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_prdb_5freturn_5flocation_2eproto_deps[2] = {
  &::descriptor_table_prdb_5fmeta_2eproto,
  &::descriptor_table_prdb_5freturn_5fplacevector_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_prdb_5freturn_5flocation_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_prdb_5freturn_5flocation_2eproto = {
  false, false, 277, descriptor_table_protodef_prdb_5freturn_5flocation_2eproto, "prdb_return_location.proto", 
  &descriptor_table_prdb_5freturn_5flocation_2eproto_once, descriptor_table_prdb_5freturn_5flocation_2eproto_deps, 2, 2,
  schemas, file_default_instances, TableStruct_prdb_5freturn_5flocation_2eproto::offsets,
  file_level_metadata_prdb_5freturn_5flocation_2eproto, file_level_enum_descriptors_prdb_5freturn_5flocation_2eproto, file_level_service_descriptors_prdb_5freturn_5flocation_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK ::PROTOBUF_NAMESPACE_ID::Metadata
descriptor_table_prdb_5freturn_5flocation_2eproto_metadata_getter(int index) {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_prdb_5freturn_5flocation_2eproto);
  return descriptor_table_prdb_5freturn_5flocation_2eproto.file_level_metadata[index];
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_prdb_5freturn_5flocation_2eproto(&descriptor_table_prdb_5freturn_5flocation_2eproto);
namespace prdb {
namespace location {

// ===================================================================

class Data_t::_Internal {
 public:
  static const ::prdb::meta::XYZ64_t& stqueriedlocation(const Data_t* msg);
};

const ::prdb::meta::XYZ64_t&
Data_t::_Internal::stqueriedlocation(const Data_t* msg) {
  return *msg->stqueriedlocation_;
}
void Data_t::clear_stqueriedlocation() {
  if (GetArena() == nullptr && stqueriedlocation_ != nullptr) {
    delete stqueriedlocation_;
  }
  stqueriedlocation_ = nullptr;
}
void Data_t::clear_stsortedlocationdata() {
  stsortedlocationdata_.Clear();
}
Data_t::Data_t(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  stsortedlocationdata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:prdb.location.Data_t)
}
Data_t::Data_t(const Data_t& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      stsortedlocationdata_(from.stsortedlocationdata_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_stqueriedlocation()) {
    stqueriedlocation_ = new ::prdb::meta::XYZ64_t(*from.stqueriedlocation_);
  } else {
    stqueriedlocation_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:prdb.location.Data_t)
}

void Data_t::SharedCtor() {
stqueriedlocation_ = nullptr;
}

Data_t::~Data_t() {
  // @@protoc_insertion_point(destructor:prdb.location.Data_t)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Data_t::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete stqueriedlocation_;
}

void Data_t::ArenaDtor(void* object) {
  Data_t* _this = reinterpret_cast< Data_t* >(object);
  (void)_this;
}
void Data_t::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Data_t::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Data_t::Clear() {
// @@protoc_insertion_point(message_clear_start:prdb.location.Data_t)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stsortedlocationdata_.Clear();
  if (GetArena() == nullptr && stqueriedlocation_ != nullptr) {
    delete stqueriedlocation_;
  }
  stqueriedlocation_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Data_t::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .prdb.meta.XYZ64_t stQueriedLocation = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_stqueriedlocation(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .prdb.placevector.Data_t stSortedLocationData = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_stsortedlocationdata(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Data_t::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:prdb.location.Data_t)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .prdb.meta.XYZ64_t stQueriedLocation = 1;
  if (this->has_stqueriedlocation()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::stqueriedlocation(this), target, stream);
  }

  // repeated .prdb.placevector.Data_t stSortedLocationData = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_stsortedlocationdata_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_stsortedlocationdata(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prdb.location.Data_t)
  return target;
}

size_t Data_t::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prdb.location.Data_t)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .prdb.placevector.Data_t stSortedLocationData = 2;
  total_size += 1UL * this->_internal_stsortedlocationdata_size();
  for (const auto& msg : this->stsortedlocationdata_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .prdb.meta.XYZ64_t stQueriedLocation = 1;
  if (this->has_stqueriedlocation()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *stqueriedlocation_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Data_t::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:prdb.location.Data_t)
  GOOGLE_DCHECK_NE(&from, this);
  const Data_t* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Data_t>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:prdb.location.Data_t)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:prdb.location.Data_t)
    MergeFrom(*source);
  }
}

void Data_t::MergeFrom(const Data_t& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:prdb.location.Data_t)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stsortedlocationdata_.MergeFrom(from.stsortedlocationdata_);
  if (from.has_stqueriedlocation()) {
    _internal_mutable_stqueriedlocation()->::prdb::meta::XYZ64_t::MergeFrom(from._internal_stqueriedlocation());
  }
}

void Data_t::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:prdb.location.Data_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Data_t::CopyFrom(const Data_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prdb.location.Data_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Data_t::IsInitialized() const {
  return true;
}

void Data_t::InternalSwap(Data_t* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  stsortedlocationdata_.InternalSwap(&other->stsortedlocationdata_);
  swap(stqueriedlocation_, other->stqueriedlocation_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Data_t::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class LocationR::_Internal {
 public:
};

LocationR::LocationR(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  stdata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:prdb.location.LocationR)
}
LocationR::LocationR(const LocationR& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      stdata_(from.stdata_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:prdb.location.LocationR)
}

void LocationR::SharedCtor() {
}

LocationR::~LocationR() {
  // @@protoc_insertion_point(destructor:prdb.location.LocationR)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void LocationR::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void LocationR::ArenaDtor(void* object) {
  LocationR* _this = reinterpret_cast< LocationR* >(object);
  (void)_this;
}
void LocationR::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LocationR::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void LocationR::Clear() {
// @@protoc_insertion_point(message_clear_start:prdb.location.LocationR)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stdata_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LocationR::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .prdb.location.Data_t stData = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_stdata(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LocationR::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:prdb.location.LocationR)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .prdb.location.Data_t stData = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_stdata_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_stdata(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prdb.location.LocationR)
  return target;
}

size_t LocationR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prdb.location.LocationR)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .prdb.location.Data_t stData = 1;
  total_size += 1UL * this->_internal_stdata_size();
  for (const auto& msg : this->stdata_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LocationR::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:prdb.location.LocationR)
  GOOGLE_DCHECK_NE(&from, this);
  const LocationR* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LocationR>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:prdb.location.LocationR)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:prdb.location.LocationR)
    MergeFrom(*source);
  }
}

void LocationR::MergeFrom(const LocationR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:prdb.location.LocationR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stdata_.MergeFrom(from.stdata_);
}

void LocationR::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:prdb.location.LocationR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LocationR::CopyFrom(const LocationR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prdb.location.LocationR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LocationR::IsInitialized() const {
  return true;
}

void LocationR::InternalSwap(LocationR* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  stdata_.InternalSwap(&other->stdata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LocationR::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace location
}  // namespace prdb
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::prdb::location::Data_t* Arena::CreateMaybeMessage< ::prdb::location::Data_t >(Arena* arena) {
  return Arena::CreateMessageInternal< ::prdb::location::Data_t >(arena);
}
template<> PROTOBUF_NOINLINE ::prdb::location::LocationR* Arena::CreateMaybeMessage< ::prdb::location::LocationR >(Arena* arena) {
  return Arena::CreateMessageInternal< ::prdb::location::LocationR >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
