// source: vp_camera.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var vgeodb_common_pb = require('./vgeodb_common_pb.js');
goog.object.extend(proto, vgeodb_common_pb);
goog.exportSymbol('proto.vpdata.camera.Camera_t', null, global);
goog.exportSymbol('proto.vpdata.camera.Camera_t.CameraType', null, global);
goog.exportSymbol('proto.vpdata.camera.Camera_t.Codec', null, global);
goog.exportSymbol('proto.vpdata.camera.Camera_t.PixelFormat', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vpdata.camera.Camera_t = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.vpdata.camera.Camera_t, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vpdata.camera.Camera_t.displayName = 'proto.vpdata.camera.Camera_t';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vpdata.camera.Camera_t.prototype.toObject = function(opt_includeInstance) {
  return proto.vpdata.camera.Camera_t.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vpdata.camera.Camera_t} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vpdata.camera.Camera_t.toObject = function(includeInstance, msg) {
  var f, obj = {
    u64tscapture: jspb.Message.getFieldWithDefault(msg, 1, 0),
    ecameratype: jspb.Message.getFieldWithDefault(msg, 2, 0),
    ecodec: jspb.Message.getFieldWithDefault(msg, 3, 0),
    u16width: jspb.Message.getFieldWithDefault(msg, 4, 0),
    u16height: jspb.Message.getFieldWithDefault(msg, 5, 0),
    epixelformat: jspb.Message.getFieldWithDefault(msg, 6, 0),
    imgdata: msg.getImgdata_asB64(),
    stextrinsic: (f = msg.getStextrinsic()) && vgeodb_common_pb.Extrinsic_t.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vpdata.camera.Camera_t}
 */
proto.vpdata.camera.Camera_t.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vpdata.camera.Camera_t;
  return proto.vpdata.camera.Camera_t.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vpdata.camera.Camera_t} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vpdata.camera.Camera_t}
 */
proto.vpdata.camera.Camera_t.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setU64tscapture(value);
      break;
    case 2:
      var value = /** @type {!proto.vpdata.camera.Camera_t.CameraType} */ (reader.readEnum());
      msg.setEcameratype(value);
      break;
    case 3:
      var value = /** @type {!proto.vpdata.camera.Camera_t.Codec} */ (reader.readEnum());
      msg.setEcodec(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setU16width(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setU16height(value);
      break;
    case 6:
      var value = /** @type {!proto.vpdata.camera.Camera_t.PixelFormat} */ (reader.readEnum());
      msg.setEpixelformat(value);
      break;
    case 7:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setImgdata(value);
      break;
    case 11:
      var value = new vgeodb_common_pb.Extrinsic_t;
      reader.readMessage(value,vgeodb_common_pb.Extrinsic_t.deserializeBinaryFromReader);
      msg.setStextrinsic(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vpdata.camera.Camera_t.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vpdata.camera.Camera_t.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vpdata.camera.Camera_t} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vpdata.camera.Camera_t.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getU64tscapture();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getEcameratype();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getEcodec();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getU16width();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getU16height();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getEpixelformat();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getImgdata_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      7,
      f
    );
  }
  f = message.getStextrinsic();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      vgeodb_common_pb.Extrinsic_t.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.vpdata.camera.Camera_t.CameraType = {
  ECAMERASTART: 0,
  EFRONT_1: 1,
  EFRONT_2: 2,
  EFRONT_END: 4,
  EBACK_1: 8,
  EBACK_2: 16,
  EBACK_3: 32,
  EBACK_4: 64,
  EBACK_5: 128,
  EBACK_6: 256,
  EBACK_END: 512
};

/**
 * @enum {number}
 */
proto.vpdata.camera.Camera_t.Codec = {
  EUNKNOWN_CODEC: 0,
  EUNCOMPRESSED: 1,
  EJPG: 2,
  EPNG: 3
};

/**
 * @enum {number}
 */
proto.vpdata.camera.Camera_t.PixelFormat = {
  EUNKNOWN_FORMAT: 0,
  E8BIT: 10,
  EGRAY8: 11,
  ERGB8: 12,
  EBGR8: 13,
  E16BIT: 20,
  EGRAY12: 21,
  EGRAY14: 22,
  EGRAY16: 23,
  ERGB12: 24,
  EBGR12: 25,
  ERGB14: 26,
  EBGR14: 27,
  ERGB16: 28,
  EBGR16: 29,
  E32BIT: 30,
  EGRAY32U: 31,
  ERGB32U: 32,
  EBGR32U: 33,
  EGRAY32F: 34,
  ERGB32F: 35,
  EBGR32F: 36,
  ECOMPRESSED: 50,
  EYUV420P8: 51,
  EYUYV422I8: 52,
  EUYVY422I8: 53
};

/**
 * optional uint64 u64TSCapture = 1;
 * @return {number}
 */
proto.vpdata.camera.Camera_t.prototype.getU64tscapture = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.vpdata.camera.Camera_t} returns this
 */
proto.vpdata.camera.Camera_t.prototype.setU64tscapture = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional CameraType eCameraType = 2;
 * @return {!proto.vpdata.camera.Camera_t.CameraType}
 */
proto.vpdata.camera.Camera_t.prototype.getEcameratype = function() {
  return /** @type {!proto.vpdata.camera.Camera_t.CameraType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.vpdata.camera.Camera_t.CameraType} value
 * @return {!proto.vpdata.camera.Camera_t} returns this
 */
proto.vpdata.camera.Camera_t.prototype.setEcameratype = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional Codec eCodec = 3;
 * @return {!proto.vpdata.camera.Camera_t.Codec}
 */
proto.vpdata.camera.Camera_t.prototype.getEcodec = function() {
  return /** @type {!proto.vpdata.camera.Camera_t.Codec} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.vpdata.camera.Camera_t.Codec} value
 * @return {!proto.vpdata.camera.Camera_t} returns this
 */
proto.vpdata.camera.Camera_t.prototype.setEcodec = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional uint32 u16Width = 4;
 * @return {number}
 */
proto.vpdata.camera.Camera_t.prototype.getU16width = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.vpdata.camera.Camera_t} returns this
 */
proto.vpdata.camera.Camera_t.prototype.setU16width = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint32 u16Height = 5;
 * @return {number}
 */
proto.vpdata.camera.Camera_t.prototype.getU16height = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.vpdata.camera.Camera_t} returns this
 */
proto.vpdata.camera.Camera_t.prototype.setU16height = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional PixelFormat ePixelFormat = 6;
 * @return {!proto.vpdata.camera.Camera_t.PixelFormat}
 */
proto.vpdata.camera.Camera_t.prototype.getEpixelformat = function() {
  return /** @type {!proto.vpdata.camera.Camera_t.PixelFormat} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.vpdata.camera.Camera_t.PixelFormat} value
 * @return {!proto.vpdata.camera.Camera_t} returns this
 */
proto.vpdata.camera.Camera_t.prototype.setEpixelformat = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional bytes imgData = 7;
 * @return {!(string|Uint8Array)}
 */
proto.vpdata.camera.Camera_t.prototype.getImgdata = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * optional bytes imgData = 7;
 * This is a type-conversion wrapper around `getImgdata()`
 * @return {string}
 */
proto.vpdata.camera.Camera_t.prototype.getImgdata_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getImgdata()));
};


/**
 * optional bytes imgData = 7;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getImgdata()`
 * @return {!Uint8Array}
 */
proto.vpdata.camera.Camera_t.prototype.getImgdata_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getImgdata()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.vpdata.camera.Camera_t} returns this
 */
proto.vpdata.camera.Camera_t.prototype.setImgdata = function(value) {
  return jspb.Message.setProto3BytesField(this, 7, value);
};


/**
 * optional VgeoDB.common.Extrinsic_t stExtrinsic = 11;
 * @return {?proto.VgeoDB.common.Extrinsic_t}
 */
proto.vpdata.camera.Camera_t.prototype.getStextrinsic = function() {
  return /** @type{?proto.VgeoDB.common.Extrinsic_t} */ (
    jspb.Message.getWrapperField(this, vgeodb_common_pb.Extrinsic_t, 11));
};


/**
 * @param {?proto.VgeoDB.common.Extrinsic_t|undefined} value
 * @return {!proto.vpdata.camera.Camera_t} returns this
*/
proto.vpdata.camera.Camera_t.prototype.setStextrinsic = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.vpdata.camera.Camera_t} returns this
 */
proto.vpdata.camera.Camera_t.prototype.clearStextrinsic = function() {
  return this.setStextrinsic(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vpdata.camera.Camera_t.prototype.hasStextrinsic = function() {
  return jspb.Message.getField(this, 11) != null;
};


goog.object.extend(exports, proto.vpdata.camera);
