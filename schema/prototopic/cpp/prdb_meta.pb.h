// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: prdb_meta.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_prdb_5fmeta_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_prdb_5fmeta_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3015000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3015008 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_prdb_5fmeta_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_prdb_5fmeta_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[5]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_prdb_5fmeta_2eproto;
::PROTOBUF_NAMESPACE_ID::Metadata descriptor_table_prdb_5fmeta_2eproto_metadata_getter(int index);
namespace prdb {
namespace meta {
class Meta_t;
struct Meta_tDefaultTypeInternal;
extern Meta_tDefaultTypeInternal _Meta_t_default_instance_;
class Orientation32_t;
struct Orientation32_tDefaultTypeInternal;
extern Orientation32_tDefaultTypeInternal _Orientation32_t_default_instance_;
class UVPoint_t;
struct UVPoint_tDefaultTypeInternal;
extern UVPoint_tDefaultTypeInternal _UVPoint_t_default_instance_;
class XYZ32_t;
struct XYZ32_tDefaultTypeInternal;
extern XYZ32_tDefaultTypeInternal _XYZ32_t_default_instance_;
class XYZ64_t;
struct XYZ64_tDefaultTypeInternal;
extern XYZ64_tDefaultTypeInternal _XYZ64_t_default_instance_;
}  // namespace meta
}  // namespace prdb
PROTOBUF_NAMESPACE_OPEN
template<> ::prdb::meta::Meta_t* Arena::CreateMaybeMessage<::prdb::meta::Meta_t>(Arena*);
template<> ::prdb::meta::Orientation32_t* Arena::CreateMaybeMessage<::prdb::meta::Orientation32_t>(Arena*);
template<> ::prdb::meta::UVPoint_t* Arena::CreateMaybeMessage<::prdb::meta::UVPoint_t>(Arena*);
template<> ::prdb::meta::XYZ32_t* Arena::CreateMaybeMessage<::prdb::meta::XYZ32_t>(Arena*);
template<> ::prdb::meta::XYZ64_t* Arena::CreateMaybeMessage<::prdb::meta::XYZ64_t>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace prdb {
namespace meta {

// ===================================================================

class XYZ64_t PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:prdb.meta.XYZ64_t) */ {
 public:
  inline XYZ64_t() : XYZ64_t(nullptr) {}
  virtual ~XYZ64_t();
  explicit constexpr XYZ64_t(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  XYZ64_t(const XYZ64_t& from);
  XYZ64_t(XYZ64_t&& from) noexcept
    : XYZ64_t() {
    *this = ::std::move(from);
  }

  inline XYZ64_t& operator=(const XYZ64_t& from) {
    CopyFrom(from);
    return *this;
  }
  inline XYZ64_t& operator=(XYZ64_t&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const XYZ64_t& default_instance() {
    return *internal_default_instance();
  }
  static inline const XYZ64_t* internal_default_instance() {
    return reinterpret_cast<const XYZ64_t*>(
               &_XYZ64_t_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(XYZ64_t& a, XYZ64_t& b) {
    a.Swap(&b);
  }
  inline void Swap(XYZ64_t* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(XYZ64_t* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline XYZ64_t* New() const final {
    return CreateMaybeMessage<XYZ64_t>(nullptr);
  }

  XYZ64_t* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<XYZ64_t>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const XYZ64_t& from);
  void MergeFrom(const XYZ64_t& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(XYZ64_t* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "prdb.meta.XYZ64_t";
  }
  protected:
  explicit XYZ64_t(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_prdb_5fmeta_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kF64XFieldNumber = 1,
    kF64YFieldNumber = 2,
    kF64ZFieldNumber = 3,
  };
  // double f64X = 1;
  void clear_f64x();
  double f64x() const;
  void set_f64x(double value);
  private:
  double _internal_f64x() const;
  void _internal_set_f64x(double value);
  public:

  // double f64Y = 2;
  void clear_f64y();
  double f64y() const;
  void set_f64y(double value);
  private:
  double _internal_f64y() const;
  void _internal_set_f64y(double value);
  public:

  // double f64Z = 3;
  void clear_f64z();
  double f64z() const;
  void set_f64z(double value);
  private:
  double _internal_f64z() const;
  void _internal_set_f64z(double value);
  public:

  // @@protoc_insertion_point(class_scope:prdb.meta.XYZ64_t)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  double f64x_;
  double f64y_;
  double f64z_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_prdb_5fmeta_2eproto;
};
// -------------------------------------------------------------------

class XYZ32_t PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:prdb.meta.XYZ32_t) */ {
 public:
  inline XYZ32_t() : XYZ32_t(nullptr) {}
  virtual ~XYZ32_t();
  explicit constexpr XYZ32_t(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  XYZ32_t(const XYZ32_t& from);
  XYZ32_t(XYZ32_t&& from) noexcept
    : XYZ32_t() {
    *this = ::std::move(from);
  }

  inline XYZ32_t& operator=(const XYZ32_t& from) {
    CopyFrom(from);
    return *this;
  }
  inline XYZ32_t& operator=(XYZ32_t&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const XYZ32_t& default_instance() {
    return *internal_default_instance();
  }
  static inline const XYZ32_t* internal_default_instance() {
    return reinterpret_cast<const XYZ32_t*>(
               &_XYZ32_t_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(XYZ32_t& a, XYZ32_t& b) {
    a.Swap(&b);
  }
  inline void Swap(XYZ32_t* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(XYZ32_t* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline XYZ32_t* New() const final {
    return CreateMaybeMessage<XYZ32_t>(nullptr);
  }

  XYZ32_t* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<XYZ32_t>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const XYZ32_t& from);
  void MergeFrom(const XYZ32_t& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(XYZ32_t* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "prdb.meta.XYZ32_t";
  }
  protected:
  explicit XYZ32_t(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_prdb_5fmeta_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kF32XFieldNumber = 1,
    kF32YFieldNumber = 2,
    kF32ZFieldNumber = 3,
  };
  // float f32X = 1;
  void clear_f32x();
  float f32x() const;
  void set_f32x(float value);
  private:
  float _internal_f32x() const;
  void _internal_set_f32x(float value);
  public:

  // float f32Y = 2;
  void clear_f32y();
  float f32y() const;
  void set_f32y(float value);
  private:
  float _internal_f32y() const;
  void _internal_set_f32y(float value);
  public:

  // float f32Z = 3;
  void clear_f32z();
  float f32z() const;
  void set_f32z(float value);
  private:
  float _internal_f32z() const;
  void _internal_set_f32z(float value);
  public:

  // @@protoc_insertion_point(class_scope:prdb.meta.XYZ32_t)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  float f32x_;
  float f32y_;
  float f32z_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_prdb_5fmeta_2eproto;
};
// -------------------------------------------------------------------

class Orientation32_t PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:prdb.meta.Orientation32_t) */ {
 public:
  inline Orientation32_t() : Orientation32_t(nullptr) {}
  virtual ~Orientation32_t();
  explicit constexpr Orientation32_t(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Orientation32_t(const Orientation32_t& from);
  Orientation32_t(Orientation32_t&& from) noexcept
    : Orientation32_t() {
    *this = ::std::move(from);
  }

  inline Orientation32_t& operator=(const Orientation32_t& from) {
    CopyFrom(from);
    return *this;
  }
  inline Orientation32_t& operator=(Orientation32_t&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Orientation32_t& default_instance() {
    return *internal_default_instance();
  }
  static inline const Orientation32_t* internal_default_instance() {
    return reinterpret_cast<const Orientation32_t*>(
               &_Orientation32_t_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(Orientation32_t& a, Orientation32_t& b) {
    a.Swap(&b);
  }
  inline void Swap(Orientation32_t* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Orientation32_t* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Orientation32_t* New() const final {
    return CreateMaybeMessage<Orientation32_t>(nullptr);
  }

  Orientation32_t* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Orientation32_t>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Orientation32_t& from);
  void MergeFrom(const Orientation32_t& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Orientation32_t* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "prdb.meta.Orientation32_t";
  }
  protected:
  explicit Orientation32_t(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_prdb_5fmeta_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kF32QXFieldNumber = 1,
    kF32QYFieldNumber = 2,
    kF32QZFieldNumber = 3,
    kF32QWFieldNumber = 4,
  };
  // float f32qX = 1;
  void clear_f32qx();
  float f32qx() const;
  void set_f32qx(float value);
  private:
  float _internal_f32qx() const;
  void _internal_set_f32qx(float value);
  public:

  // float f32qY = 2;
  void clear_f32qy();
  float f32qy() const;
  void set_f32qy(float value);
  private:
  float _internal_f32qy() const;
  void _internal_set_f32qy(float value);
  public:

  // float f32qZ = 3;
  void clear_f32qz();
  float f32qz() const;
  void set_f32qz(float value);
  private:
  float _internal_f32qz() const;
  void _internal_set_f32qz(float value);
  public:

  // float f32qW = 4;
  void clear_f32qw();
  float f32qw() const;
  void set_f32qw(float value);
  private:
  float _internal_f32qw() const;
  void _internal_set_f32qw(float value);
  public:

  // @@protoc_insertion_point(class_scope:prdb.meta.Orientation32_t)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  float f32qx_;
  float f32qy_;
  float f32qz_;
  float f32qw_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_prdb_5fmeta_2eproto;
};
// -------------------------------------------------------------------

class UVPoint_t PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:prdb.meta.UVPoint_t) */ {
 public:
  inline UVPoint_t() : UVPoint_t(nullptr) {}
  virtual ~UVPoint_t();
  explicit constexpr UVPoint_t(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  UVPoint_t(const UVPoint_t& from);
  UVPoint_t(UVPoint_t&& from) noexcept
    : UVPoint_t() {
    *this = ::std::move(from);
  }

  inline UVPoint_t& operator=(const UVPoint_t& from) {
    CopyFrom(from);
    return *this;
  }
  inline UVPoint_t& operator=(UVPoint_t&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UVPoint_t& default_instance() {
    return *internal_default_instance();
  }
  static inline const UVPoint_t* internal_default_instance() {
    return reinterpret_cast<const UVPoint_t*>(
               &_UVPoint_t_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(UVPoint_t& a, UVPoint_t& b) {
    a.Swap(&b);
  }
  inline void Swap(UVPoint_t* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UVPoint_t* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UVPoint_t* New() const final {
    return CreateMaybeMessage<UVPoint_t>(nullptr);
  }

  UVPoint_t* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UVPoint_t>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UVPoint_t& from);
  void MergeFrom(const UVPoint_t& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UVPoint_t* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "prdb.meta.UVPoint_t";
  }
  protected:
  explicit UVPoint_t(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_prdb_5fmeta_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUn32UFieldNumber = 1,
    kUn32VFieldNumber = 2,
    kF32UFieldNumber = 3,
    kF32VFieldNumber = 4,
  };
  // uint32 un32U = 1;
  void clear_un32u();
  ::PROTOBUF_NAMESPACE_ID::uint32 un32u() const;
  void set_un32u(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_un32u() const;
  void _internal_set_un32u(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 un32V = 2;
  void clear_un32v();
  ::PROTOBUF_NAMESPACE_ID::uint32 un32v() const;
  void set_un32v(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_un32v() const;
  void _internal_set_un32v(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // float f32U = 3;
  void clear_f32u();
  float f32u() const;
  void set_f32u(float value);
  private:
  float _internal_f32u() const;
  void _internal_set_f32u(float value);
  public:

  // float f32V = 4;
  void clear_f32v();
  float f32v() const;
  void set_f32v(float value);
  private:
  float _internal_f32v() const;
  void _internal_set_f32v(float value);
  public:

  // @@protoc_insertion_point(class_scope:prdb.meta.UVPoint_t)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 un32u_;
  ::PROTOBUF_NAMESPACE_ID::uint32 un32v_;
  float f32u_;
  float f32v_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_prdb_5fmeta_2eproto;
};
// -------------------------------------------------------------------

class Meta_t PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:prdb.meta.Meta_t) */ {
 public:
  inline Meta_t() : Meta_t(nullptr) {}
  virtual ~Meta_t();
  explicit constexpr Meta_t(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Meta_t(const Meta_t& from);
  Meta_t(Meta_t&& from) noexcept
    : Meta_t() {
    *this = ::std::move(from);
  }

  inline Meta_t& operator=(const Meta_t& from) {
    CopyFrom(from);
    return *this;
  }
  inline Meta_t& operator=(Meta_t&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Meta_t& default_instance() {
    return *internal_default_instance();
  }
  static inline const Meta_t* internal_default_instance() {
    return reinterpret_cast<const Meta_t*>(
               &_Meta_t_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(Meta_t& a, Meta_t& b) {
    a.Swap(&b);
  }
  inline void Swap(Meta_t* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Meta_t* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Meta_t* New() const final {
    return CreateMaybeMessage<Meta_t>(nullptr);
  }

  Meta_t* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Meta_t>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Meta_t& from);
  void MergeFrom(const Meta_t& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Meta_t* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "prdb.meta.Meta_t";
  }
  protected:
  explicit Meta_t(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_prdb_5fmeta_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStLocationSetFieldNumber = 6,
    kStAvgLocationFieldNumber = 3,
    kStOrientationFieldNumber = 4,
    kStDirectionVectorFieldNumber = 5,
    kU64KeyFrameIndexFieldNumber = 1,
    kU64TimestampFieldNumber = 2,
  };
  // repeated .prdb.meta.XYZ64_t stLocationSet = 6;
  int stlocationset_size() const;
  private:
  int _internal_stlocationset_size() const;
  public:
  void clear_stlocationset();
  ::prdb::meta::XYZ64_t* mutable_stlocationset(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::prdb::meta::XYZ64_t >*
      mutable_stlocationset();
  private:
  const ::prdb::meta::XYZ64_t& _internal_stlocationset(int index) const;
  ::prdb::meta::XYZ64_t* _internal_add_stlocationset();
  public:
  const ::prdb::meta::XYZ64_t& stlocationset(int index) const;
  ::prdb::meta::XYZ64_t* add_stlocationset();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::prdb::meta::XYZ64_t >&
      stlocationset() const;

  // .prdb.meta.XYZ64_t stAvgLocation = 3;
  bool has_stavglocation() const;
  private:
  bool _internal_has_stavglocation() const;
  public:
  void clear_stavglocation();
  const ::prdb::meta::XYZ64_t& stavglocation() const;
  ::prdb::meta::XYZ64_t* release_stavglocation();
  ::prdb::meta::XYZ64_t* mutable_stavglocation();
  void set_allocated_stavglocation(::prdb::meta::XYZ64_t* stavglocation);
  private:
  const ::prdb::meta::XYZ64_t& _internal_stavglocation() const;
  ::prdb::meta::XYZ64_t* _internal_mutable_stavglocation();
  public:
  void unsafe_arena_set_allocated_stavglocation(
      ::prdb::meta::XYZ64_t* stavglocation);
  ::prdb::meta::XYZ64_t* unsafe_arena_release_stavglocation();

  // .prdb.meta.Orientation32_t stOrientation = 4;
  bool has_storientation() const;
  private:
  bool _internal_has_storientation() const;
  public:
  void clear_storientation();
  const ::prdb::meta::Orientation32_t& storientation() const;
  ::prdb::meta::Orientation32_t* release_storientation();
  ::prdb::meta::Orientation32_t* mutable_storientation();
  void set_allocated_storientation(::prdb::meta::Orientation32_t* storientation);
  private:
  const ::prdb::meta::Orientation32_t& _internal_storientation() const;
  ::prdb::meta::Orientation32_t* _internal_mutable_storientation();
  public:
  void unsafe_arena_set_allocated_storientation(
      ::prdb::meta::Orientation32_t* storientation);
  ::prdb::meta::Orientation32_t* unsafe_arena_release_storientation();

  // .prdb.meta.XYZ32_t stDirectionVector = 5;
  bool has_stdirectionvector() const;
  private:
  bool _internal_has_stdirectionvector() const;
  public:
  void clear_stdirectionvector();
  const ::prdb::meta::XYZ32_t& stdirectionvector() const;
  ::prdb::meta::XYZ32_t* release_stdirectionvector();
  ::prdb::meta::XYZ32_t* mutable_stdirectionvector();
  void set_allocated_stdirectionvector(::prdb::meta::XYZ32_t* stdirectionvector);
  private:
  const ::prdb::meta::XYZ32_t& _internal_stdirectionvector() const;
  ::prdb::meta::XYZ32_t* _internal_mutable_stdirectionvector();
  public:
  void unsafe_arena_set_allocated_stdirectionvector(
      ::prdb::meta::XYZ32_t* stdirectionvector);
  ::prdb::meta::XYZ32_t* unsafe_arena_release_stdirectionvector();

  // uint64 u64KeyFrameIndex = 1;
  void clear_u64keyframeindex();
  ::PROTOBUF_NAMESPACE_ID::uint64 u64keyframeindex() const;
  void set_u64keyframeindex(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_u64keyframeindex() const;
  void _internal_set_u64keyframeindex(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 u64Timestamp = 2;
  void clear_u64timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 u64timestamp() const;
  void set_u64timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_u64timestamp() const;
  void _internal_set_u64timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:prdb.meta.Meta_t)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::prdb::meta::XYZ64_t > stlocationset_;
  ::prdb::meta::XYZ64_t* stavglocation_;
  ::prdb::meta::Orientation32_t* storientation_;
  ::prdb::meta::XYZ32_t* stdirectionvector_;
  ::PROTOBUF_NAMESPACE_ID::uint64 u64keyframeindex_;
  ::PROTOBUF_NAMESPACE_ID::uint64 u64timestamp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_prdb_5fmeta_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// XYZ64_t

// double f64X = 1;
inline void XYZ64_t::clear_f64x() {
  f64x_ = 0;
}
inline double XYZ64_t::_internal_f64x() const {
  return f64x_;
}
inline double XYZ64_t::f64x() const {
  // @@protoc_insertion_point(field_get:prdb.meta.XYZ64_t.f64X)
  return _internal_f64x();
}
inline void XYZ64_t::_internal_set_f64x(double value) {
  
  f64x_ = value;
}
inline void XYZ64_t::set_f64x(double value) {
  _internal_set_f64x(value);
  // @@protoc_insertion_point(field_set:prdb.meta.XYZ64_t.f64X)
}

// double f64Y = 2;
inline void XYZ64_t::clear_f64y() {
  f64y_ = 0;
}
inline double XYZ64_t::_internal_f64y() const {
  return f64y_;
}
inline double XYZ64_t::f64y() const {
  // @@protoc_insertion_point(field_get:prdb.meta.XYZ64_t.f64Y)
  return _internal_f64y();
}
inline void XYZ64_t::_internal_set_f64y(double value) {
  
  f64y_ = value;
}
inline void XYZ64_t::set_f64y(double value) {
  _internal_set_f64y(value);
  // @@protoc_insertion_point(field_set:prdb.meta.XYZ64_t.f64Y)
}

// double f64Z = 3;
inline void XYZ64_t::clear_f64z() {
  f64z_ = 0;
}
inline double XYZ64_t::_internal_f64z() const {
  return f64z_;
}
inline double XYZ64_t::f64z() const {
  // @@protoc_insertion_point(field_get:prdb.meta.XYZ64_t.f64Z)
  return _internal_f64z();
}
inline void XYZ64_t::_internal_set_f64z(double value) {
  
  f64z_ = value;
}
inline void XYZ64_t::set_f64z(double value) {
  _internal_set_f64z(value);
  // @@protoc_insertion_point(field_set:prdb.meta.XYZ64_t.f64Z)
}

// -------------------------------------------------------------------

// XYZ32_t

// float f32X = 1;
inline void XYZ32_t::clear_f32x() {
  f32x_ = 0;
}
inline float XYZ32_t::_internal_f32x() const {
  return f32x_;
}
inline float XYZ32_t::f32x() const {
  // @@protoc_insertion_point(field_get:prdb.meta.XYZ32_t.f32X)
  return _internal_f32x();
}
inline void XYZ32_t::_internal_set_f32x(float value) {
  
  f32x_ = value;
}
inline void XYZ32_t::set_f32x(float value) {
  _internal_set_f32x(value);
  // @@protoc_insertion_point(field_set:prdb.meta.XYZ32_t.f32X)
}

// float f32Y = 2;
inline void XYZ32_t::clear_f32y() {
  f32y_ = 0;
}
inline float XYZ32_t::_internal_f32y() const {
  return f32y_;
}
inline float XYZ32_t::f32y() const {
  // @@protoc_insertion_point(field_get:prdb.meta.XYZ32_t.f32Y)
  return _internal_f32y();
}
inline void XYZ32_t::_internal_set_f32y(float value) {
  
  f32y_ = value;
}
inline void XYZ32_t::set_f32y(float value) {
  _internal_set_f32y(value);
  // @@protoc_insertion_point(field_set:prdb.meta.XYZ32_t.f32Y)
}

// float f32Z = 3;
inline void XYZ32_t::clear_f32z() {
  f32z_ = 0;
}
inline float XYZ32_t::_internal_f32z() const {
  return f32z_;
}
inline float XYZ32_t::f32z() const {
  // @@protoc_insertion_point(field_get:prdb.meta.XYZ32_t.f32Z)
  return _internal_f32z();
}
inline void XYZ32_t::_internal_set_f32z(float value) {
  
  f32z_ = value;
}
inline void XYZ32_t::set_f32z(float value) {
  _internal_set_f32z(value);
  // @@protoc_insertion_point(field_set:prdb.meta.XYZ32_t.f32Z)
}

// -------------------------------------------------------------------

// Orientation32_t

// float f32qX = 1;
inline void Orientation32_t::clear_f32qx() {
  f32qx_ = 0;
}
inline float Orientation32_t::_internal_f32qx() const {
  return f32qx_;
}
inline float Orientation32_t::f32qx() const {
  // @@protoc_insertion_point(field_get:prdb.meta.Orientation32_t.f32qX)
  return _internal_f32qx();
}
inline void Orientation32_t::_internal_set_f32qx(float value) {
  
  f32qx_ = value;
}
inline void Orientation32_t::set_f32qx(float value) {
  _internal_set_f32qx(value);
  // @@protoc_insertion_point(field_set:prdb.meta.Orientation32_t.f32qX)
}

// float f32qY = 2;
inline void Orientation32_t::clear_f32qy() {
  f32qy_ = 0;
}
inline float Orientation32_t::_internal_f32qy() const {
  return f32qy_;
}
inline float Orientation32_t::f32qy() const {
  // @@protoc_insertion_point(field_get:prdb.meta.Orientation32_t.f32qY)
  return _internal_f32qy();
}
inline void Orientation32_t::_internal_set_f32qy(float value) {
  
  f32qy_ = value;
}
inline void Orientation32_t::set_f32qy(float value) {
  _internal_set_f32qy(value);
  // @@protoc_insertion_point(field_set:prdb.meta.Orientation32_t.f32qY)
}

// float f32qZ = 3;
inline void Orientation32_t::clear_f32qz() {
  f32qz_ = 0;
}
inline float Orientation32_t::_internal_f32qz() const {
  return f32qz_;
}
inline float Orientation32_t::f32qz() const {
  // @@protoc_insertion_point(field_get:prdb.meta.Orientation32_t.f32qZ)
  return _internal_f32qz();
}
inline void Orientation32_t::_internal_set_f32qz(float value) {
  
  f32qz_ = value;
}
inline void Orientation32_t::set_f32qz(float value) {
  _internal_set_f32qz(value);
  // @@protoc_insertion_point(field_set:prdb.meta.Orientation32_t.f32qZ)
}

// float f32qW = 4;
inline void Orientation32_t::clear_f32qw() {
  f32qw_ = 0;
}
inline float Orientation32_t::_internal_f32qw() const {
  return f32qw_;
}
inline float Orientation32_t::f32qw() const {
  // @@protoc_insertion_point(field_get:prdb.meta.Orientation32_t.f32qW)
  return _internal_f32qw();
}
inline void Orientation32_t::_internal_set_f32qw(float value) {
  
  f32qw_ = value;
}
inline void Orientation32_t::set_f32qw(float value) {
  _internal_set_f32qw(value);
  // @@protoc_insertion_point(field_set:prdb.meta.Orientation32_t.f32qW)
}

// -------------------------------------------------------------------

// UVPoint_t

// uint32 un32U = 1;
inline void UVPoint_t::clear_un32u() {
  un32u_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UVPoint_t::_internal_un32u() const {
  return un32u_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UVPoint_t::un32u() const {
  // @@protoc_insertion_point(field_get:prdb.meta.UVPoint_t.un32U)
  return _internal_un32u();
}
inline void UVPoint_t::_internal_set_un32u(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  un32u_ = value;
}
inline void UVPoint_t::set_un32u(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_un32u(value);
  // @@protoc_insertion_point(field_set:prdb.meta.UVPoint_t.un32U)
}

// uint32 un32V = 2;
inline void UVPoint_t::clear_un32v() {
  un32v_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UVPoint_t::_internal_un32v() const {
  return un32v_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UVPoint_t::un32v() const {
  // @@protoc_insertion_point(field_get:prdb.meta.UVPoint_t.un32V)
  return _internal_un32v();
}
inline void UVPoint_t::_internal_set_un32v(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  un32v_ = value;
}
inline void UVPoint_t::set_un32v(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_un32v(value);
  // @@protoc_insertion_point(field_set:prdb.meta.UVPoint_t.un32V)
}

// float f32U = 3;
inline void UVPoint_t::clear_f32u() {
  f32u_ = 0;
}
inline float UVPoint_t::_internal_f32u() const {
  return f32u_;
}
inline float UVPoint_t::f32u() const {
  // @@protoc_insertion_point(field_get:prdb.meta.UVPoint_t.f32U)
  return _internal_f32u();
}
inline void UVPoint_t::_internal_set_f32u(float value) {
  
  f32u_ = value;
}
inline void UVPoint_t::set_f32u(float value) {
  _internal_set_f32u(value);
  // @@protoc_insertion_point(field_set:prdb.meta.UVPoint_t.f32U)
}

// float f32V = 4;
inline void UVPoint_t::clear_f32v() {
  f32v_ = 0;
}
inline float UVPoint_t::_internal_f32v() const {
  return f32v_;
}
inline float UVPoint_t::f32v() const {
  // @@protoc_insertion_point(field_get:prdb.meta.UVPoint_t.f32V)
  return _internal_f32v();
}
inline void UVPoint_t::_internal_set_f32v(float value) {
  
  f32v_ = value;
}
inline void UVPoint_t::set_f32v(float value) {
  _internal_set_f32v(value);
  // @@protoc_insertion_point(field_set:prdb.meta.UVPoint_t.f32V)
}

// -------------------------------------------------------------------

// Meta_t

// uint64 u64KeyFrameIndex = 1;
inline void Meta_t::clear_u64keyframeindex() {
  u64keyframeindex_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Meta_t::_internal_u64keyframeindex() const {
  return u64keyframeindex_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Meta_t::u64keyframeindex() const {
  // @@protoc_insertion_point(field_get:prdb.meta.Meta_t.u64KeyFrameIndex)
  return _internal_u64keyframeindex();
}
inline void Meta_t::_internal_set_u64keyframeindex(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  u64keyframeindex_ = value;
}
inline void Meta_t::set_u64keyframeindex(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_u64keyframeindex(value);
  // @@protoc_insertion_point(field_set:prdb.meta.Meta_t.u64KeyFrameIndex)
}

// uint64 u64Timestamp = 2;
inline void Meta_t::clear_u64timestamp() {
  u64timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Meta_t::_internal_u64timestamp() const {
  return u64timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Meta_t::u64timestamp() const {
  // @@protoc_insertion_point(field_get:prdb.meta.Meta_t.u64Timestamp)
  return _internal_u64timestamp();
}
inline void Meta_t::_internal_set_u64timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  u64timestamp_ = value;
}
inline void Meta_t::set_u64timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_u64timestamp(value);
  // @@protoc_insertion_point(field_set:prdb.meta.Meta_t.u64Timestamp)
}

// .prdb.meta.XYZ64_t stAvgLocation = 3;
inline bool Meta_t::_internal_has_stavglocation() const {
  return this != internal_default_instance() && stavglocation_ != nullptr;
}
inline bool Meta_t::has_stavglocation() const {
  return _internal_has_stavglocation();
}
inline void Meta_t::clear_stavglocation() {
  if (GetArena() == nullptr && stavglocation_ != nullptr) {
    delete stavglocation_;
  }
  stavglocation_ = nullptr;
}
inline const ::prdb::meta::XYZ64_t& Meta_t::_internal_stavglocation() const {
  const ::prdb::meta::XYZ64_t* p = stavglocation_;
  return p != nullptr ? *p : reinterpret_cast<const ::prdb::meta::XYZ64_t&>(
      ::prdb::meta::_XYZ64_t_default_instance_);
}
inline const ::prdb::meta::XYZ64_t& Meta_t::stavglocation() const {
  // @@protoc_insertion_point(field_get:prdb.meta.Meta_t.stAvgLocation)
  return _internal_stavglocation();
}
inline void Meta_t::unsafe_arena_set_allocated_stavglocation(
    ::prdb::meta::XYZ64_t* stavglocation) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stavglocation_);
  }
  stavglocation_ = stavglocation;
  if (stavglocation) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:prdb.meta.Meta_t.stAvgLocation)
}
inline ::prdb::meta::XYZ64_t* Meta_t::release_stavglocation() {
  
  ::prdb::meta::XYZ64_t* temp = stavglocation_;
  stavglocation_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::prdb::meta::XYZ64_t* Meta_t::unsafe_arena_release_stavglocation() {
  // @@protoc_insertion_point(field_release:prdb.meta.Meta_t.stAvgLocation)
  
  ::prdb::meta::XYZ64_t* temp = stavglocation_;
  stavglocation_ = nullptr;
  return temp;
}
inline ::prdb::meta::XYZ64_t* Meta_t::_internal_mutable_stavglocation() {
  
  if (stavglocation_ == nullptr) {
    auto* p = CreateMaybeMessage<::prdb::meta::XYZ64_t>(GetArena());
    stavglocation_ = p;
  }
  return stavglocation_;
}
inline ::prdb::meta::XYZ64_t* Meta_t::mutable_stavglocation() {
  // @@protoc_insertion_point(field_mutable:prdb.meta.Meta_t.stAvgLocation)
  return _internal_mutable_stavglocation();
}
inline void Meta_t::set_allocated_stavglocation(::prdb::meta::XYZ64_t* stavglocation) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stavglocation_;
  }
  if (stavglocation) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stavglocation);
    if (message_arena != submessage_arena) {
      stavglocation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stavglocation, submessage_arena);
    }
    
  } else {
    
  }
  stavglocation_ = stavglocation;
  // @@protoc_insertion_point(field_set_allocated:prdb.meta.Meta_t.stAvgLocation)
}

// .prdb.meta.Orientation32_t stOrientation = 4;
inline bool Meta_t::_internal_has_storientation() const {
  return this != internal_default_instance() && storientation_ != nullptr;
}
inline bool Meta_t::has_storientation() const {
  return _internal_has_storientation();
}
inline void Meta_t::clear_storientation() {
  if (GetArena() == nullptr && storientation_ != nullptr) {
    delete storientation_;
  }
  storientation_ = nullptr;
}
inline const ::prdb::meta::Orientation32_t& Meta_t::_internal_storientation() const {
  const ::prdb::meta::Orientation32_t* p = storientation_;
  return p != nullptr ? *p : reinterpret_cast<const ::prdb::meta::Orientation32_t&>(
      ::prdb::meta::_Orientation32_t_default_instance_);
}
inline const ::prdb::meta::Orientation32_t& Meta_t::storientation() const {
  // @@protoc_insertion_point(field_get:prdb.meta.Meta_t.stOrientation)
  return _internal_storientation();
}
inline void Meta_t::unsafe_arena_set_allocated_storientation(
    ::prdb::meta::Orientation32_t* storientation) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(storientation_);
  }
  storientation_ = storientation;
  if (storientation) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:prdb.meta.Meta_t.stOrientation)
}
inline ::prdb::meta::Orientation32_t* Meta_t::release_storientation() {
  
  ::prdb::meta::Orientation32_t* temp = storientation_;
  storientation_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::prdb::meta::Orientation32_t* Meta_t::unsafe_arena_release_storientation() {
  // @@protoc_insertion_point(field_release:prdb.meta.Meta_t.stOrientation)
  
  ::prdb::meta::Orientation32_t* temp = storientation_;
  storientation_ = nullptr;
  return temp;
}
inline ::prdb::meta::Orientation32_t* Meta_t::_internal_mutable_storientation() {
  
  if (storientation_ == nullptr) {
    auto* p = CreateMaybeMessage<::prdb::meta::Orientation32_t>(GetArena());
    storientation_ = p;
  }
  return storientation_;
}
inline ::prdb::meta::Orientation32_t* Meta_t::mutable_storientation() {
  // @@protoc_insertion_point(field_mutable:prdb.meta.Meta_t.stOrientation)
  return _internal_mutable_storientation();
}
inline void Meta_t::set_allocated_storientation(::prdb::meta::Orientation32_t* storientation) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete storientation_;
  }
  if (storientation) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(storientation);
    if (message_arena != submessage_arena) {
      storientation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, storientation, submessage_arena);
    }
    
  } else {
    
  }
  storientation_ = storientation;
  // @@protoc_insertion_point(field_set_allocated:prdb.meta.Meta_t.stOrientation)
}

// .prdb.meta.XYZ32_t stDirectionVector = 5;
inline bool Meta_t::_internal_has_stdirectionvector() const {
  return this != internal_default_instance() && stdirectionvector_ != nullptr;
}
inline bool Meta_t::has_stdirectionvector() const {
  return _internal_has_stdirectionvector();
}
inline void Meta_t::clear_stdirectionvector() {
  if (GetArena() == nullptr && stdirectionvector_ != nullptr) {
    delete stdirectionvector_;
  }
  stdirectionvector_ = nullptr;
}
inline const ::prdb::meta::XYZ32_t& Meta_t::_internal_stdirectionvector() const {
  const ::prdb::meta::XYZ32_t* p = stdirectionvector_;
  return p != nullptr ? *p : reinterpret_cast<const ::prdb::meta::XYZ32_t&>(
      ::prdb::meta::_XYZ32_t_default_instance_);
}
inline const ::prdb::meta::XYZ32_t& Meta_t::stdirectionvector() const {
  // @@protoc_insertion_point(field_get:prdb.meta.Meta_t.stDirectionVector)
  return _internal_stdirectionvector();
}
inline void Meta_t::unsafe_arena_set_allocated_stdirectionvector(
    ::prdb::meta::XYZ32_t* stdirectionvector) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stdirectionvector_);
  }
  stdirectionvector_ = stdirectionvector;
  if (stdirectionvector) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:prdb.meta.Meta_t.stDirectionVector)
}
inline ::prdb::meta::XYZ32_t* Meta_t::release_stdirectionvector() {
  
  ::prdb::meta::XYZ32_t* temp = stdirectionvector_;
  stdirectionvector_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::prdb::meta::XYZ32_t* Meta_t::unsafe_arena_release_stdirectionvector() {
  // @@protoc_insertion_point(field_release:prdb.meta.Meta_t.stDirectionVector)
  
  ::prdb::meta::XYZ32_t* temp = stdirectionvector_;
  stdirectionvector_ = nullptr;
  return temp;
}
inline ::prdb::meta::XYZ32_t* Meta_t::_internal_mutable_stdirectionvector() {
  
  if (stdirectionvector_ == nullptr) {
    auto* p = CreateMaybeMessage<::prdb::meta::XYZ32_t>(GetArena());
    stdirectionvector_ = p;
  }
  return stdirectionvector_;
}
inline ::prdb::meta::XYZ32_t* Meta_t::mutable_stdirectionvector() {
  // @@protoc_insertion_point(field_mutable:prdb.meta.Meta_t.stDirectionVector)
  return _internal_mutable_stdirectionvector();
}
inline void Meta_t::set_allocated_stdirectionvector(::prdb::meta::XYZ32_t* stdirectionvector) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stdirectionvector_;
  }
  if (stdirectionvector) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stdirectionvector);
    if (message_arena != submessage_arena) {
      stdirectionvector = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stdirectionvector, submessage_arena);
    }
    
  } else {
    
  }
  stdirectionvector_ = stdirectionvector;
  // @@protoc_insertion_point(field_set_allocated:prdb.meta.Meta_t.stDirectionVector)
}

// repeated .prdb.meta.XYZ64_t stLocationSet = 6;
inline int Meta_t::_internal_stlocationset_size() const {
  return stlocationset_.size();
}
inline int Meta_t::stlocationset_size() const {
  return _internal_stlocationset_size();
}
inline void Meta_t::clear_stlocationset() {
  stlocationset_.Clear();
}
inline ::prdb::meta::XYZ64_t* Meta_t::mutable_stlocationset(int index) {
  // @@protoc_insertion_point(field_mutable:prdb.meta.Meta_t.stLocationSet)
  return stlocationset_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::prdb::meta::XYZ64_t >*
Meta_t::mutable_stlocationset() {
  // @@protoc_insertion_point(field_mutable_list:prdb.meta.Meta_t.stLocationSet)
  return &stlocationset_;
}
inline const ::prdb::meta::XYZ64_t& Meta_t::_internal_stlocationset(int index) const {
  return stlocationset_.Get(index);
}
inline const ::prdb::meta::XYZ64_t& Meta_t::stlocationset(int index) const {
  // @@protoc_insertion_point(field_get:prdb.meta.Meta_t.stLocationSet)
  return _internal_stlocationset(index);
}
inline ::prdb::meta::XYZ64_t* Meta_t::_internal_add_stlocationset() {
  return stlocationset_.Add();
}
inline ::prdb::meta::XYZ64_t* Meta_t::add_stlocationset() {
  // @@protoc_insertion_point(field_add:prdb.meta.Meta_t.stLocationSet)
  return _internal_add_stlocationset();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::prdb::meta::XYZ64_t >&
Meta_t::stlocationset() const {
  // @@protoc_insertion_point(field_list:prdb.meta.Meta_t.stLocationSet)
  return stlocationset_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace meta
}  // namespace prdb

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_prdb_5fmeta_2eproto
