// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: prdb_query_keyframeindex.proto

#include "prdb_query_keyframeindex.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace prdb {
namespace keyframeindex {
constexpr KeyFrameIndexQ::KeyFrameIndexQ(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : u64keyframeindex_()
  , _u64keyframeindex_cached_byte_size_()
  , u8localfeatureflag_(0u){}
struct KeyFrameIndexQDefaultTypeInternal {
  constexpr KeyFrameIndexQDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~KeyFrameIndexQDefaultTypeInternal() {}
  union {
    KeyFrameIndexQ _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT KeyFrameIndexQDefaultTypeInternal _KeyFrameIndexQ_default_instance_;
}  // namespace keyframeindex
}  // namespace prdb
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_prdb_5fquery_5fkeyframeindex_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_prdb_5fquery_5fkeyframeindex_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_prdb_5fquery_5fkeyframeindex_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_prdb_5fquery_5fkeyframeindex_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::prdb::keyframeindex::KeyFrameIndexQ, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::prdb::keyframeindex::KeyFrameIndexQ, u64keyframeindex_),
  PROTOBUF_FIELD_OFFSET(::prdb::keyframeindex::KeyFrameIndexQ, u8localfeatureflag_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::prdb::keyframeindex::KeyFrameIndexQ)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::prdb::keyframeindex::_KeyFrameIndexQ_default_instance_),
};

const char descriptor_table_protodef_prdb_5fquery_5fkeyframeindex_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\036prdb_query_keyframeindex.proto\022\022prdb.k"
  "eyframeindex\"F\n\016KeyFrameIndexQ\022\030\n\020u64Key"
  "FrameIndex\030\001 \003(\004\022\032\n\022u8LocalFeatureFlag\030\002"
  " \001(\rB\013\n\tdbms.prdbb\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_prdb_5fquery_5fkeyframeindex_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_prdb_5fquery_5fkeyframeindex_2eproto = {
  false, false, 145, descriptor_table_protodef_prdb_5fquery_5fkeyframeindex_2eproto, "prdb_query_keyframeindex.proto", 
  &descriptor_table_prdb_5fquery_5fkeyframeindex_2eproto_once, nullptr, 0, 1,
  schemas, file_default_instances, TableStruct_prdb_5fquery_5fkeyframeindex_2eproto::offsets,
  file_level_metadata_prdb_5fquery_5fkeyframeindex_2eproto, file_level_enum_descriptors_prdb_5fquery_5fkeyframeindex_2eproto, file_level_service_descriptors_prdb_5fquery_5fkeyframeindex_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK ::PROTOBUF_NAMESPACE_ID::Metadata
descriptor_table_prdb_5fquery_5fkeyframeindex_2eproto_metadata_getter(int index) {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_prdb_5fquery_5fkeyframeindex_2eproto);
  return descriptor_table_prdb_5fquery_5fkeyframeindex_2eproto.file_level_metadata[index];
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_prdb_5fquery_5fkeyframeindex_2eproto(&descriptor_table_prdb_5fquery_5fkeyframeindex_2eproto);
namespace prdb {
namespace keyframeindex {

// ===================================================================

class KeyFrameIndexQ::_Internal {
 public:
};

KeyFrameIndexQ::KeyFrameIndexQ(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  u64keyframeindex_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:prdb.keyframeindex.KeyFrameIndexQ)
}
KeyFrameIndexQ::KeyFrameIndexQ(const KeyFrameIndexQ& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      u64keyframeindex_(from.u64keyframeindex_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  u8localfeatureflag_ = from.u8localfeatureflag_;
  // @@protoc_insertion_point(copy_constructor:prdb.keyframeindex.KeyFrameIndexQ)
}

void KeyFrameIndexQ::SharedCtor() {
u8localfeatureflag_ = 0u;
}

KeyFrameIndexQ::~KeyFrameIndexQ() {
  // @@protoc_insertion_point(destructor:prdb.keyframeindex.KeyFrameIndexQ)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void KeyFrameIndexQ::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void KeyFrameIndexQ::ArenaDtor(void* object) {
  KeyFrameIndexQ* _this = reinterpret_cast< KeyFrameIndexQ* >(object);
  (void)_this;
}
void KeyFrameIndexQ::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void KeyFrameIndexQ::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void KeyFrameIndexQ::Clear() {
// @@protoc_insertion_point(message_clear_start:prdb.keyframeindex.KeyFrameIndexQ)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  u64keyframeindex_.Clear();
  u8localfeatureflag_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* KeyFrameIndexQ::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated uint64 u64KeyFrameIndex = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt64Parser(_internal_mutable_u64keyframeindex(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8) {
          _internal_add_u64keyframeindex(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 u8LocalFeatureFlag = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          u8localfeatureflag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* KeyFrameIndexQ::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:prdb.keyframeindex.KeyFrameIndexQ)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 u64KeyFrameIndex = 1;
  {
    int byte_size = _u64keyframeindex_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt64Packed(
          1, _internal_u64keyframeindex(), byte_size, target);
    }
  }

  // uint32 u8LocalFeatureFlag = 2;
  if (this->u8localfeatureflag() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_u8localfeatureflag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prdb.keyframeindex.KeyFrameIndexQ)
  return target;
}

size_t KeyFrameIndexQ::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prdb.keyframeindex.KeyFrameIndexQ)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint64 u64KeyFrameIndex = 1;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt64Size(this->u64keyframeindex_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _u64keyframeindex_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // uint32 u8LocalFeatureFlag = 2;
  if (this->u8localfeatureflag() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_u8localfeatureflag());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void KeyFrameIndexQ::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:prdb.keyframeindex.KeyFrameIndexQ)
  GOOGLE_DCHECK_NE(&from, this);
  const KeyFrameIndexQ* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<KeyFrameIndexQ>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:prdb.keyframeindex.KeyFrameIndexQ)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:prdb.keyframeindex.KeyFrameIndexQ)
    MergeFrom(*source);
  }
}

void KeyFrameIndexQ::MergeFrom(const KeyFrameIndexQ& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:prdb.keyframeindex.KeyFrameIndexQ)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  u64keyframeindex_.MergeFrom(from.u64keyframeindex_);
  if (from.u8localfeatureflag() != 0) {
    _internal_set_u8localfeatureflag(from._internal_u8localfeatureflag());
  }
}

void KeyFrameIndexQ::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:prdb.keyframeindex.KeyFrameIndexQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeyFrameIndexQ::CopyFrom(const KeyFrameIndexQ& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prdb.keyframeindex.KeyFrameIndexQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeyFrameIndexQ::IsInitialized() const {
  return true;
}

void KeyFrameIndexQ::InternalSwap(KeyFrameIndexQ* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  u64keyframeindex_.InternalSwap(&other->u64keyframeindex_);
  swap(u8localfeatureflag_, other->u8localfeatureflag_);
}

::PROTOBUF_NAMESPACE_ID::Metadata KeyFrameIndexQ::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace keyframeindex
}  // namespace prdb
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::prdb::keyframeindex::KeyFrameIndexQ* Arena::CreateMaybeMessage< ::prdb::keyframeindex::KeyFrameIndexQ >(Arena* arena) {
  return Arena::CreateMessageInternal< ::prdb::keyframeindex::KeyFrameIndexQ >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
