// source: vp_msg.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var vp_state_pb = require('./vp_state_pb.js');
goog.object.extend(proto, vp_state_pb);
var vp_camera_pb = require('./vp_camera_pb.js');
goog.object.extend(proto, vp_camera_pb);
var vp_sensors_pb = require('./vp_sensors_pb.js');
goog.object.extend(proto, vp_sensors_pb);
goog.exportSymbol('proto.vpdata.VPBody', null, global);
goog.exportSymbol('proto.vpdata.VPData', null, global);
goog.exportSymbol('proto.vpdata.VPHeader', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vpdata.VPHeader = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.vpdata.VPHeader.repeatedFields_, null);
};
goog.inherits(proto.vpdata.VPHeader, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vpdata.VPHeader.displayName = 'proto.vpdata.VPHeader';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vpdata.VPBody = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.vpdata.VPBody.repeatedFields_, null);
};
goog.inherits(proto.vpdata.VPBody, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vpdata.VPBody.displayName = 'proto.vpdata.VPBody';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vpdata.VPData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.vpdata.VPData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vpdata.VPData.displayName = 'proto.vpdata.VPData';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.vpdata.VPHeader.repeatedFields_ = [4,7,8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vpdata.VPHeader.prototype.toObject = function(opt_includeInstance) {
  return proto.vpdata.VPHeader.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vpdata.VPHeader} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vpdata.VPHeader.toObject = function(includeInstance, msg) {
  var f, obj = {
    strschemaver: jspb.Message.getFieldWithDefault(msg, 1, ""),
    strdevicename: jspb.Message.getFieldWithDefault(msg, 2, ""),
    strosinfo: jspb.Message.getFieldWithDefault(msg, 3, ""),
    ars32telcopciList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    s32telcorssi: jspb.Message.getFieldWithDefault(msg, 5, 0),
    u64tssend: jspb.Message.getFieldWithDefault(msg, 6, 0),
    arf64lastlocList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 7)) == null ? undefined : f,
    arf32extrinsicList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 8)) == null ? undefined : f,
    strtargetenv: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vpdata.VPHeader}
 */
proto.vpdata.VPHeader.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vpdata.VPHeader;
  return proto.vpdata.VPHeader.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vpdata.VPHeader} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vpdata.VPHeader}
 */
proto.vpdata.VPHeader.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStrschemaver(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStrdevicename(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setStrosinfo(value);
      break;
    case 4:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addArs32telcopci(values[i]);
      }
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setS32telcorssi(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setU64tssend(value);
      break;
    case 7:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedDouble() : [reader.readDouble()]);
      for (var i = 0; i < values.length; i++) {
        msg.addArf64lastloc(values[i]);
      }
      break;
    case 8:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFloat() : [reader.readFloat()]);
      for (var i = 0; i < values.length; i++) {
        msg.addArf32extrinsic(values[i]);
      }
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setStrtargetenv(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vpdata.VPHeader.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vpdata.VPHeader.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vpdata.VPHeader} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vpdata.VPHeader.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStrschemaver();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStrdevicename();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getStrosinfo();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getArs32telcopciList();
  if (f.length > 0) {
    writer.writePackedInt32(
      4,
      f
    );
  }
  f = message.getS32telcorssi();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getU64tssend();
  if (f !== 0) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = message.getArf64lastlocList();
  if (f.length > 0) {
    writer.writePackedDouble(
      7,
      f
    );
  }
  f = message.getArf32extrinsicList();
  if (f.length > 0) {
    writer.writePackedFloat(
      8,
      f
    );
  }
  f = message.getStrtargetenv();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional string strSchemaVer = 1;
 * @return {string}
 */
proto.vpdata.VPHeader.prototype.getStrschemaver = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.vpdata.VPHeader} returns this
 */
proto.vpdata.VPHeader.prototype.setStrschemaver = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string strDeviceName = 2;
 * @return {string}
 */
proto.vpdata.VPHeader.prototype.getStrdevicename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.vpdata.VPHeader} returns this
 */
proto.vpdata.VPHeader.prototype.setStrdevicename = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string strOSInfo = 3;
 * @return {string}
 */
proto.vpdata.VPHeader.prototype.getStrosinfo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.vpdata.VPHeader} returns this
 */
proto.vpdata.VPHeader.prototype.setStrosinfo = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated int32 ars32TelcoPCI = 4;
 * @return {!Array<number>}
 */
proto.vpdata.VPHeader.prototype.getArs32telcopciList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.vpdata.VPHeader} returns this
 */
proto.vpdata.VPHeader.prototype.setArs32telcopciList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.vpdata.VPHeader} returns this
 */
proto.vpdata.VPHeader.prototype.addArs32telcopci = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.vpdata.VPHeader} returns this
 */
proto.vpdata.VPHeader.prototype.clearArs32telcopciList = function() {
  return this.setArs32telcopciList([]);
};


/**
 * optional int32 s32TelcoRSSI = 5;
 * @return {number}
 */
proto.vpdata.VPHeader.prototype.getS32telcorssi = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.vpdata.VPHeader} returns this
 */
proto.vpdata.VPHeader.prototype.setS32telcorssi = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint64 u64TSSend = 6;
 * @return {number}
 */
proto.vpdata.VPHeader.prototype.getU64tssend = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.vpdata.VPHeader} returns this
 */
proto.vpdata.VPHeader.prototype.setU64tssend = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * repeated double arf64LastLoc = 7;
 * @return {!Array<number>}
 */
proto.vpdata.VPHeader.prototype.getArf64lastlocList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 7));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.vpdata.VPHeader} returns this
 */
proto.vpdata.VPHeader.prototype.setArf64lastlocList = function(value) {
  return jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.vpdata.VPHeader} returns this
 */
proto.vpdata.VPHeader.prototype.addArf64lastloc = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.vpdata.VPHeader} returns this
 */
proto.vpdata.VPHeader.prototype.clearArf64lastlocList = function() {
  return this.setArf64lastlocList([]);
};


/**
 * repeated float arf32Extrinsic = 8;
 * @return {!Array<number>}
 */
proto.vpdata.VPHeader.prototype.getArf32extrinsicList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 8));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.vpdata.VPHeader} returns this
 */
proto.vpdata.VPHeader.prototype.setArf32extrinsicList = function(value) {
  return jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.vpdata.VPHeader} returns this
 */
proto.vpdata.VPHeader.prototype.addArf32extrinsic = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.vpdata.VPHeader} returns this
 */
proto.vpdata.VPHeader.prototype.clearArf32extrinsicList = function() {
  return this.setArf32extrinsicList([]);
};


/**
 * optional string strTargetEnv = 9;
 * @return {string}
 */
proto.vpdata.VPHeader.prototype.getStrtargetenv = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.vpdata.VPHeader} returns this
 */
proto.vpdata.VPHeader.prototype.setStrtargetenv = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.vpdata.VPBody.repeatedFields_ = [3,4,5,6,7,8,9,10,11,12,13,14,21];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vpdata.VPBody.prototype.toObject = function(opt_includeInstance) {
  return proto.vpdata.VPBody.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vpdata.VPBody} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vpdata.VPBody.toObject = function(includeInstance, msg) {
  var f, obj = {
    ststate: (f = msg.getStstate()) && vp_state_pb.VPState_t.toObject(includeInstance, f),
    stcamera: (f = msg.getStcamera()) && vp_camera_pb.Camera_t.toObject(includeInstance, f),
    stgpsList: jspb.Message.toObjectList(msg.getStgpsList(),
    vp_sensors_pb.GPS_t.toObject, includeInstance),
    stimuList: jspb.Message.toObjectList(msg.getStimuList(),
    vp_sensors_pb.IMU_t.toObject, includeInstance),
    stbarometerList: jspb.Message.toObjectList(msg.getStbarometerList(),
    vp_sensors_pb.Barometer_t.toObject, includeInstance),
    stmagneticcompassList: jspb.Message.toObjectList(msg.getStmagneticcompassList(),
    vp_sensors_pb.MCompass_t.toObject, includeInstance),
    stgpslocationinfoList: jspb.Message.toObjectList(msg.getStgpslocationinfoList(),
    vp_sensors_pb.GPSLocationInfo_t.toObject, includeInstance),
    staccelerometerinfoList: jspb.Message.toObjectList(msg.getStaccelerometerinfoList(),
    vp_sensors_pb.AccelerometerInfo_t.toObject, includeInstance),
    stgyroscopeinfoList: jspb.Message.toObjectList(msg.getStgyroscopeinfoList(),
    vp_sensors_pb.GyroscopeInfo_t.toObject, includeInstance),
    strotationvectorinfoList: jspb.Message.toObjectList(msg.getStrotationvectorinfoList(),
    vp_sensors_pb.RotationVectorInfo_t.toObject, includeInstance),
    ststepcounterinfoList: jspb.Message.toObjectList(msg.getStstepcounterinfoList(),
    vp_sensors_pb.StepCounterInfo_t.toObject, includeInstance),
    ststepdetectorinfoList: jspb.Message.toObjectList(msg.getStstepdetectorinfoList(),
    vp_sensors_pb.StepDetectorInfo_t.toObject, includeInstance),
    stmagneticfieldinfoList: jspb.Message.toObjectList(msg.getStmagneticfieldinfoList(),
    vp_sensors_pb.MagneticFieldInfo_t.toObject, includeInstance),
    stpressureinfoList: jspb.Message.toObjectList(msg.getStpressureinfoList(),
    vp_sensors_pb.PressureInfo_t.toObject, includeInstance),
    stsubcamerasList: jspb.Message.toObjectList(msg.getStsubcamerasList(),
    vp_camera_pb.Camera_t.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vpdata.VPBody}
 */
proto.vpdata.VPBody.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vpdata.VPBody;
  return proto.vpdata.VPBody.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vpdata.VPBody} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vpdata.VPBody}
 */
proto.vpdata.VPBody.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new vp_state_pb.VPState_t;
      reader.readMessage(value,vp_state_pb.VPState_t.deserializeBinaryFromReader);
      msg.setStstate(value);
      break;
    case 2:
      var value = new vp_camera_pb.Camera_t;
      reader.readMessage(value,vp_camera_pb.Camera_t.deserializeBinaryFromReader);
      msg.setStcamera(value);
      break;
    case 3:
      var value = new vp_sensors_pb.GPS_t;
      reader.readMessage(value,vp_sensors_pb.GPS_t.deserializeBinaryFromReader);
      msg.addStgps(value);
      break;
    case 4:
      var value = new vp_sensors_pb.IMU_t;
      reader.readMessage(value,vp_sensors_pb.IMU_t.deserializeBinaryFromReader);
      msg.addStimu(value);
      break;
    case 5:
      var value = new vp_sensors_pb.Barometer_t;
      reader.readMessage(value,vp_sensors_pb.Barometer_t.deserializeBinaryFromReader);
      msg.addStbarometer(value);
      break;
    case 6:
      var value = new vp_sensors_pb.MCompass_t;
      reader.readMessage(value,vp_sensors_pb.MCompass_t.deserializeBinaryFromReader);
      msg.addStmagneticcompass(value);
      break;
    case 7:
      var value = new vp_sensors_pb.GPSLocationInfo_t;
      reader.readMessage(value,vp_sensors_pb.GPSLocationInfo_t.deserializeBinaryFromReader);
      msg.addStgpslocationinfo(value);
      break;
    case 8:
      var value = new vp_sensors_pb.AccelerometerInfo_t;
      reader.readMessage(value,vp_sensors_pb.AccelerometerInfo_t.deserializeBinaryFromReader);
      msg.addStaccelerometerinfo(value);
      break;
    case 9:
      var value = new vp_sensors_pb.GyroscopeInfo_t;
      reader.readMessage(value,vp_sensors_pb.GyroscopeInfo_t.deserializeBinaryFromReader);
      msg.addStgyroscopeinfo(value);
      break;
    case 10:
      var value = new vp_sensors_pb.RotationVectorInfo_t;
      reader.readMessage(value,vp_sensors_pb.RotationVectorInfo_t.deserializeBinaryFromReader);
      msg.addStrotationvectorinfo(value);
      break;
    case 11:
      var value = new vp_sensors_pb.StepCounterInfo_t;
      reader.readMessage(value,vp_sensors_pb.StepCounterInfo_t.deserializeBinaryFromReader);
      msg.addStstepcounterinfo(value);
      break;
    case 12:
      var value = new vp_sensors_pb.StepDetectorInfo_t;
      reader.readMessage(value,vp_sensors_pb.StepDetectorInfo_t.deserializeBinaryFromReader);
      msg.addStstepdetectorinfo(value);
      break;
    case 13:
      var value = new vp_sensors_pb.MagneticFieldInfo_t;
      reader.readMessage(value,vp_sensors_pb.MagneticFieldInfo_t.deserializeBinaryFromReader);
      msg.addStmagneticfieldinfo(value);
      break;
    case 14:
      var value = new vp_sensors_pb.PressureInfo_t;
      reader.readMessage(value,vp_sensors_pb.PressureInfo_t.deserializeBinaryFromReader);
      msg.addStpressureinfo(value);
      break;
    case 21:
      var value = new vp_camera_pb.Camera_t;
      reader.readMessage(value,vp_camera_pb.Camera_t.deserializeBinaryFromReader);
      msg.addStsubcameras(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vpdata.VPBody.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vpdata.VPBody.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vpdata.VPBody} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vpdata.VPBody.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStstate();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      vp_state_pb.VPState_t.serializeBinaryToWriter
    );
  }
  f = message.getStcamera();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      vp_camera_pb.Camera_t.serializeBinaryToWriter
    );
  }
  f = message.getStgpsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      vp_sensors_pb.GPS_t.serializeBinaryToWriter
    );
  }
  f = message.getStimuList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      vp_sensors_pb.IMU_t.serializeBinaryToWriter
    );
  }
  f = message.getStbarometerList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      vp_sensors_pb.Barometer_t.serializeBinaryToWriter
    );
  }
  f = message.getStmagneticcompassList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      vp_sensors_pb.MCompass_t.serializeBinaryToWriter
    );
  }
  f = message.getStgpslocationinfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      vp_sensors_pb.GPSLocationInfo_t.serializeBinaryToWriter
    );
  }
  f = message.getStaccelerometerinfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      vp_sensors_pb.AccelerometerInfo_t.serializeBinaryToWriter
    );
  }
  f = message.getStgyroscopeinfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      vp_sensors_pb.GyroscopeInfo_t.serializeBinaryToWriter
    );
  }
  f = message.getStrotationvectorinfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      vp_sensors_pb.RotationVectorInfo_t.serializeBinaryToWriter
    );
  }
  f = message.getStstepcounterinfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      11,
      f,
      vp_sensors_pb.StepCounterInfo_t.serializeBinaryToWriter
    );
  }
  f = message.getStstepdetectorinfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      12,
      f,
      vp_sensors_pb.StepDetectorInfo_t.serializeBinaryToWriter
    );
  }
  f = message.getStmagneticfieldinfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      13,
      f,
      vp_sensors_pb.MagneticFieldInfo_t.serializeBinaryToWriter
    );
  }
  f = message.getStpressureinfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      14,
      f,
      vp_sensors_pb.PressureInfo_t.serializeBinaryToWriter
    );
  }
  f = message.getStsubcamerasList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      21,
      f,
      vp_camera_pb.Camera_t.serializeBinaryToWriter
    );
  }
};


/**
 * optional state.VPState_t stState = 1;
 * @return {?proto.vpdata.state.VPState_t}
 */
proto.vpdata.VPBody.prototype.getStstate = function() {
  return /** @type{?proto.vpdata.state.VPState_t} */ (
    jspb.Message.getWrapperField(this, vp_state_pb.VPState_t, 1));
};


/**
 * @param {?proto.vpdata.state.VPState_t|undefined} value
 * @return {!proto.vpdata.VPBody} returns this
*/
proto.vpdata.VPBody.prototype.setStstate = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.vpdata.VPBody} returns this
 */
proto.vpdata.VPBody.prototype.clearStstate = function() {
  return this.setStstate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vpdata.VPBody.prototype.hasStstate = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional camera.Camera_t stCamera = 2;
 * @return {?proto.vpdata.camera.Camera_t}
 */
proto.vpdata.VPBody.prototype.getStcamera = function() {
  return /** @type{?proto.vpdata.camera.Camera_t} */ (
    jspb.Message.getWrapperField(this, vp_camera_pb.Camera_t, 2));
};


/**
 * @param {?proto.vpdata.camera.Camera_t|undefined} value
 * @return {!proto.vpdata.VPBody} returns this
*/
proto.vpdata.VPBody.prototype.setStcamera = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.vpdata.VPBody} returns this
 */
proto.vpdata.VPBody.prototype.clearStcamera = function() {
  return this.setStcamera(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vpdata.VPBody.prototype.hasStcamera = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated sensors.GPS_t stGPS = 3;
 * @return {!Array<!proto.vpdata.sensors.GPS_t>}
 */
proto.vpdata.VPBody.prototype.getStgpsList = function() {
  return /** @type{!Array<!proto.vpdata.sensors.GPS_t>} */ (
    jspb.Message.getRepeatedWrapperField(this, vp_sensors_pb.GPS_t, 3));
};


/**
 * @param {!Array<!proto.vpdata.sensors.GPS_t>} value
 * @return {!proto.vpdata.VPBody} returns this
*/
proto.vpdata.VPBody.prototype.setStgpsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.vpdata.sensors.GPS_t=} opt_value
 * @param {number=} opt_index
 * @return {!proto.vpdata.sensors.GPS_t}
 */
proto.vpdata.VPBody.prototype.addStgps = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.vpdata.sensors.GPS_t, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.vpdata.VPBody} returns this
 */
proto.vpdata.VPBody.prototype.clearStgpsList = function() {
  return this.setStgpsList([]);
};


/**
 * repeated sensors.IMU_t stIMU = 4;
 * @return {!Array<!proto.vpdata.sensors.IMU_t>}
 */
proto.vpdata.VPBody.prototype.getStimuList = function() {
  return /** @type{!Array<!proto.vpdata.sensors.IMU_t>} */ (
    jspb.Message.getRepeatedWrapperField(this, vp_sensors_pb.IMU_t, 4));
};


/**
 * @param {!Array<!proto.vpdata.sensors.IMU_t>} value
 * @return {!proto.vpdata.VPBody} returns this
*/
proto.vpdata.VPBody.prototype.setStimuList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.vpdata.sensors.IMU_t=} opt_value
 * @param {number=} opt_index
 * @return {!proto.vpdata.sensors.IMU_t}
 */
proto.vpdata.VPBody.prototype.addStimu = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.vpdata.sensors.IMU_t, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.vpdata.VPBody} returns this
 */
proto.vpdata.VPBody.prototype.clearStimuList = function() {
  return this.setStimuList([]);
};


/**
 * repeated sensors.Barometer_t stBaroMeter = 5;
 * @return {!Array<!proto.vpdata.sensors.Barometer_t>}
 */
proto.vpdata.VPBody.prototype.getStbarometerList = function() {
  return /** @type{!Array<!proto.vpdata.sensors.Barometer_t>} */ (
    jspb.Message.getRepeatedWrapperField(this, vp_sensors_pb.Barometer_t, 5));
};


/**
 * @param {!Array<!proto.vpdata.sensors.Barometer_t>} value
 * @return {!proto.vpdata.VPBody} returns this
*/
proto.vpdata.VPBody.prototype.setStbarometerList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.vpdata.sensors.Barometer_t=} opt_value
 * @param {number=} opt_index
 * @return {!proto.vpdata.sensors.Barometer_t}
 */
proto.vpdata.VPBody.prototype.addStbarometer = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.vpdata.sensors.Barometer_t, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.vpdata.VPBody} returns this
 */
proto.vpdata.VPBody.prototype.clearStbarometerList = function() {
  return this.setStbarometerList([]);
};


/**
 * repeated sensors.MCompass_t stMagneticCompass = 6;
 * @return {!Array<!proto.vpdata.sensors.MCompass_t>}
 */
proto.vpdata.VPBody.prototype.getStmagneticcompassList = function() {
  return /** @type{!Array<!proto.vpdata.sensors.MCompass_t>} */ (
    jspb.Message.getRepeatedWrapperField(this, vp_sensors_pb.MCompass_t, 6));
};


/**
 * @param {!Array<!proto.vpdata.sensors.MCompass_t>} value
 * @return {!proto.vpdata.VPBody} returns this
*/
proto.vpdata.VPBody.prototype.setStmagneticcompassList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.vpdata.sensors.MCompass_t=} opt_value
 * @param {number=} opt_index
 * @return {!proto.vpdata.sensors.MCompass_t}
 */
proto.vpdata.VPBody.prototype.addStmagneticcompass = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.vpdata.sensors.MCompass_t, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.vpdata.VPBody} returns this
 */
proto.vpdata.VPBody.prototype.clearStmagneticcompassList = function() {
  return this.setStmagneticcompassList([]);
};


/**
 * repeated sensors.GPSLocationInfo_t stGPSLocationInfo = 7;
 * @return {!Array<!proto.vpdata.sensors.GPSLocationInfo_t>}
 */
proto.vpdata.VPBody.prototype.getStgpslocationinfoList = function() {
  return /** @type{!Array<!proto.vpdata.sensors.GPSLocationInfo_t>} */ (
    jspb.Message.getRepeatedWrapperField(this, vp_sensors_pb.GPSLocationInfo_t, 7));
};


/**
 * @param {!Array<!proto.vpdata.sensors.GPSLocationInfo_t>} value
 * @return {!proto.vpdata.VPBody} returns this
*/
proto.vpdata.VPBody.prototype.setStgpslocationinfoList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.vpdata.sensors.GPSLocationInfo_t=} opt_value
 * @param {number=} opt_index
 * @return {!proto.vpdata.sensors.GPSLocationInfo_t}
 */
proto.vpdata.VPBody.prototype.addStgpslocationinfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.vpdata.sensors.GPSLocationInfo_t, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.vpdata.VPBody} returns this
 */
proto.vpdata.VPBody.prototype.clearStgpslocationinfoList = function() {
  return this.setStgpslocationinfoList([]);
};


/**
 * repeated sensors.AccelerometerInfo_t stAccelerometerInfo = 8;
 * @return {!Array<!proto.vpdata.sensors.AccelerometerInfo_t>}
 */
proto.vpdata.VPBody.prototype.getStaccelerometerinfoList = function() {
  return /** @type{!Array<!proto.vpdata.sensors.AccelerometerInfo_t>} */ (
    jspb.Message.getRepeatedWrapperField(this, vp_sensors_pb.AccelerometerInfo_t, 8));
};


/**
 * @param {!Array<!proto.vpdata.sensors.AccelerometerInfo_t>} value
 * @return {!proto.vpdata.VPBody} returns this
*/
proto.vpdata.VPBody.prototype.setStaccelerometerinfoList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.vpdata.sensors.AccelerometerInfo_t=} opt_value
 * @param {number=} opt_index
 * @return {!proto.vpdata.sensors.AccelerometerInfo_t}
 */
proto.vpdata.VPBody.prototype.addStaccelerometerinfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.vpdata.sensors.AccelerometerInfo_t, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.vpdata.VPBody} returns this
 */
proto.vpdata.VPBody.prototype.clearStaccelerometerinfoList = function() {
  return this.setStaccelerometerinfoList([]);
};


/**
 * repeated sensors.GyroscopeInfo_t stGyroscopeInfo = 9;
 * @return {!Array<!proto.vpdata.sensors.GyroscopeInfo_t>}
 */
proto.vpdata.VPBody.prototype.getStgyroscopeinfoList = function() {
  return /** @type{!Array<!proto.vpdata.sensors.GyroscopeInfo_t>} */ (
    jspb.Message.getRepeatedWrapperField(this, vp_sensors_pb.GyroscopeInfo_t, 9));
};


/**
 * @param {!Array<!proto.vpdata.sensors.GyroscopeInfo_t>} value
 * @return {!proto.vpdata.VPBody} returns this
*/
proto.vpdata.VPBody.prototype.setStgyroscopeinfoList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.vpdata.sensors.GyroscopeInfo_t=} opt_value
 * @param {number=} opt_index
 * @return {!proto.vpdata.sensors.GyroscopeInfo_t}
 */
proto.vpdata.VPBody.prototype.addStgyroscopeinfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.vpdata.sensors.GyroscopeInfo_t, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.vpdata.VPBody} returns this
 */
proto.vpdata.VPBody.prototype.clearStgyroscopeinfoList = function() {
  return this.setStgyroscopeinfoList([]);
};


/**
 * repeated sensors.RotationVectorInfo_t stRotationVectorInfo = 10;
 * @return {!Array<!proto.vpdata.sensors.RotationVectorInfo_t>}
 */
proto.vpdata.VPBody.prototype.getStrotationvectorinfoList = function() {
  return /** @type{!Array<!proto.vpdata.sensors.RotationVectorInfo_t>} */ (
    jspb.Message.getRepeatedWrapperField(this, vp_sensors_pb.RotationVectorInfo_t, 10));
};


/**
 * @param {!Array<!proto.vpdata.sensors.RotationVectorInfo_t>} value
 * @return {!proto.vpdata.VPBody} returns this
*/
proto.vpdata.VPBody.prototype.setStrotationvectorinfoList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.vpdata.sensors.RotationVectorInfo_t=} opt_value
 * @param {number=} opt_index
 * @return {!proto.vpdata.sensors.RotationVectorInfo_t}
 */
proto.vpdata.VPBody.prototype.addStrotationvectorinfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.vpdata.sensors.RotationVectorInfo_t, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.vpdata.VPBody} returns this
 */
proto.vpdata.VPBody.prototype.clearStrotationvectorinfoList = function() {
  return this.setStrotationvectorinfoList([]);
};


/**
 * repeated sensors.StepCounterInfo_t stStepCounterInfo = 11;
 * @return {!Array<!proto.vpdata.sensors.StepCounterInfo_t>}
 */
proto.vpdata.VPBody.prototype.getStstepcounterinfoList = function() {
  return /** @type{!Array<!proto.vpdata.sensors.StepCounterInfo_t>} */ (
    jspb.Message.getRepeatedWrapperField(this, vp_sensors_pb.StepCounterInfo_t, 11));
};


/**
 * @param {!Array<!proto.vpdata.sensors.StepCounterInfo_t>} value
 * @return {!proto.vpdata.VPBody} returns this
*/
proto.vpdata.VPBody.prototype.setStstepcounterinfoList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.vpdata.sensors.StepCounterInfo_t=} opt_value
 * @param {number=} opt_index
 * @return {!proto.vpdata.sensors.StepCounterInfo_t}
 */
proto.vpdata.VPBody.prototype.addStstepcounterinfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.vpdata.sensors.StepCounterInfo_t, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.vpdata.VPBody} returns this
 */
proto.vpdata.VPBody.prototype.clearStstepcounterinfoList = function() {
  return this.setStstepcounterinfoList([]);
};


/**
 * repeated sensors.StepDetectorInfo_t stStepDetectorInfo = 12;
 * @return {!Array<!proto.vpdata.sensors.StepDetectorInfo_t>}
 */
proto.vpdata.VPBody.prototype.getStstepdetectorinfoList = function() {
  return /** @type{!Array<!proto.vpdata.sensors.StepDetectorInfo_t>} */ (
    jspb.Message.getRepeatedWrapperField(this, vp_sensors_pb.StepDetectorInfo_t, 12));
};


/**
 * @param {!Array<!proto.vpdata.sensors.StepDetectorInfo_t>} value
 * @return {!proto.vpdata.VPBody} returns this
*/
proto.vpdata.VPBody.prototype.setStstepdetectorinfoList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 12, value);
};


/**
 * @param {!proto.vpdata.sensors.StepDetectorInfo_t=} opt_value
 * @param {number=} opt_index
 * @return {!proto.vpdata.sensors.StepDetectorInfo_t}
 */
proto.vpdata.VPBody.prototype.addStstepdetectorinfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 12, opt_value, proto.vpdata.sensors.StepDetectorInfo_t, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.vpdata.VPBody} returns this
 */
proto.vpdata.VPBody.prototype.clearStstepdetectorinfoList = function() {
  return this.setStstepdetectorinfoList([]);
};


/**
 * repeated sensors.MagneticFieldInfo_t stMagneticFieldInfo = 13;
 * @return {!Array<!proto.vpdata.sensors.MagneticFieldInfo_t>}
 */
proto.vpdata.VPBody.prototype.getStmagneticfieldinfoList = function() {
  return /** @type{!Array<!proto.vpdata.sensors.MagneticFieldInfo_t>} */ (
    jspb.Message.getRepeatedWrapperField(this, vp_sensors_pb.MagneticFieldInfo_t, 13));
};


/**
 * @param {!Array<!proto.vpdata.sensors.MagneticFieldInfo_t>} value
 * @return {!proto.vpdata.VPBody} returns this
*/
proto.vpdata.VPBody.prototype.setStmagneticfieldinfoList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 13, value);
};


/**
 * @param {!proto.vpdata.sensors.MagneticFieldInfo_t=} opt_value
 * @param {number=} opt_index
 * @return {!proto.vpdata.sensors.MagneticFieldInfo_t}
 */
proto.vpdata.VPBody.prototype.addStmagneticfieldinfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 13, opt_value, proto.vpdata.sensors.MagneticFieldInfo_t, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.vpdata.VPBody} returns this
 */
proto.vpdata.VPBody.prototype.clearStmagneticfieldinfoList = function() {
  return this.setStmagneticfieldinfoList([]);
};


/**
 * repeated sensors.PressureInfo_t stPressureInfo = 14;
 * @return {!Array<!proto.vpdata.sensors.PressureInfo_t>}
 */
proto.vpdata.VPBody.prototype.getStpressureinfoList = function() {
  return /** @type{!Array<!proto.vpdata.sensors.PressureInfo_t>} */ (
    jspb.Message.getRepeatedWrapperField(this, vp_sensors_pb.PressureInfo_t, 14));
};


/**
 * @param {!Array<!proto.vpdata.sensors.PressureInfo_t>} value
 * @return {!proto.vpdata.VPBody} returns this
*/
proto.vpdata.VPBody.prototype.setStpressureinfoList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 14, value);
};


/**
 * @param {!proto.vpdata.sensors.PressureInfo_t=} opt_value
 * @param {number=} opt_index
 * @return {!proto.vpdata.sensors.PressureInfo_t}
 */
proto.vpdata.VPBody.prototype.addStpressureinfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 14, opt_value, proto.vpdata.sensors.PressureInfo_t, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.vpdata.VPBody} returns this
 */
proto.vpdata.VPBody.prototype.clearStpressureinfoList = function() {
  return this.setStpressureinfoList([]);
};


/**
 * repeated camera.Camera_t stSubCameras = 21;
 * @return {!Array<!proto.vpdata.camera.Camera_t>}
 */
proto.vpdata.VPBody.prototype.getStsubcamerasList = function() {
  return /** @type{!Array<!proto.vpdata.camera.Camera_t>} */ (
    jspb.Message.getRepeatedWrapperField(this, vp_camera_pb.Camera_t, 21));
};


/**
 * @param {!Array<!proto.vpdata.camera.Camera_t>} value
 * @return {!proto.vpdata.VPBody} returns this
*/
proto.vpdata.VPBody.prototype.setStsubcamerasList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 21, value);
};


/**
 * @param {!proto.vpdata.camera.Camera_t=} opt_value
 * @param {number=} opt_index
 * @return {!proto.vpdata.camera.Camera_t}
 */
proto.vpdata.VPBody.prototype.addStsubcameras = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 21, opt_value, proto.vpdata.camera.Camera_t, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.vpdata.VPBody} returns this
 */
proto.vpdata.VPBody.prototype.clearStsubcamerasList = function() {
  return this.setStsubcamerasList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vpdata.VPData.prototype.toObject = function(opt_includeInstance) {
  return proto.vpdata.VPData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vpdata.VPData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vpdata.VPData.toObject = function(includeInstance, msg) {
  var f, obj = {
    stvpheader: (f = msg.getStvpheader()) && proto.vpdata.VPHeader.toObject(includeInstance, f),
    stvpbody: (f = msg.getStvpbody()) && proto.vpdata.VPBody.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vpdata.VPData}
 */
proto.vpdata.VPData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vpdata.VPData;
  return proto.vpdata.VPData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vpdata.VPData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vpdata.VPData}
 */
proto.vpdata.VPData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.vpdata.VPHeader;
      reader.readMessage(value,proto.vpdata.VPHeader.deserializeBinaryFromReader);
      msg.setStvpheader(value);
      break;
    case 2:
      var value = new proto.vpdata.VPBody;
      reader.readMessage(value,proto.vpdata.VPBody.deserializeBinaryFromReader);
      msg.setStvpbody(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vpdata.VPData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vpdata.VPData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vpdata.VPData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vpdata.VPData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStvpheader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.vpdata.VPHeader.serializeBinaryToWriter
    );
  }
  f = message.getStvpbody();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.vpdata.VPBody.serializeBinaryToWriter
    );
  }
};


/**
 * optional VPHeader stVPHeader = 1;
 * @return {?proto.vpdata.VPHeader}
 */
proto.vpdata.VPData.prototype.getStvpheader = function() {
  return /** @type{?proto.vpdata.VPHeader} */ (
    jspb.Message.getWrapperField(this, proto.vpdata.VPHeader, 1));
};


/**
 * @param {?proto.vpdata.VPHeader|undefined} value
 * @return {!proto.vpdata.VPData} returns this
*/
proto.vpdata.VPData.prototype.setStvpheader = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.vpdata.VPData} returns this
 */
proto.vpdata.VPData.prototype.clearStvpheader = function() {
  return this.setStvpheader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vpdata.VPData.prototype.hasStvpheader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional VPBody stVPBody = 2;
 * @return {?proto.vpdata.VPBody}
 */
proto.vpdata.VPData.prototype.getStvpbody = function() {
  return /** @type{?proto.vpdata.VPBody} */ (
    jspb.Message.getWrapperField(this, proto.vpdata.VPBody, 2));
};


/**
 * @param {?proto.vpdata.VPBody|undefined} value
 * @return {!proto.vpdata.VPData} returns this
*/
proto.vpdata.VPData.prototype.setStvpbody = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.vpdata.VPData} returns this
 */
proto.vpdata.VPData.prototype.clearStvpbody = function() {
  return this.setStvpbody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vpdata.VPData.prototype.hasStvpbody = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.vpdata);
